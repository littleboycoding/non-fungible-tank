
Š€€€(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{640:function(t,s,a){"use strict";a.r(s);var e=a(24),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-rpc-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-rpc-api-reference"}},[t._v("#")]),t._v(" HTTP RPC API reference")]),t._v(" "),a("p",[a("em",[t._v("Generated on 2022-02-19, from go-ipfs v0.12.0.")])]),t._v(" "),a("p",[t._v("When an IPFS node is running as a daemon, it exposes an HTTP RPC API that allows you to control the node and run the same commands you can from the command line.")]),t._v(" "),a("p",[t._v("In many cases, using this RPC API is preferable to embedding IPFS directly in your program â€” it allows you to maintain peer connections that are longer lived than your app and you can keep a single IPFS node running instead of several if your app can be launched multiple times. In fact, the "),a("code",[t._v("ipfs")]),t._v(" CLI commands use this RPC API when operating in online mode.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("This document was autogenerated from go-ipfs. For issues and support, check out the "),a("a",{attrs:{href:"https://github.com/ipfs/ipfs-docs/tree/main/tools/http-api-docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http-api-docs"),a("OutboundLink")],1),t._v(" repository on GitHub.")])]),t._v(" "),a("h2",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),a("h3",{attrs:{id:"alignment-with-cli-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alignment-with-cli-commands"}},[t._v("#")]),t._v(" Alignment with CLI commands")]),t._v(" "),a("p",[t._v("The HTTP API under "),a("code",[t._v("/api/v0/")]),t._v(" is an RPC-style API over HTTP, not a REST API.")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/reference/cli/"}},[t._v("Every command")]),t._v(" usable from the CLI is also available through the HTTP RPC API. For example:")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ipfs swarm peers\n/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ\n/ip4/104.236.151.122/tcp/4001/p2p/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx\n/ip4/104.236.176.52/tcp/4001/p2p/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST http://127.0.0.1:5001/api/v0/swarm/peers\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Strings"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/104.236.151.122/tcp/4001/p2p/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/104.236.176.52/tcp/4001/p2p/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z"')]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v('Arguments are added through the special query string key "arg":')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('> curl -X POST "http://127.0.0.1:5001/api/v0/swarm/disconnect?arg=/ip4/54.93.113.247/tcp/48131/p2p/QmUDS3nsBD1X4XK5Jo836fed7SErTyTuQzRqWaiQAyBYMP"\n{\n  "Strings": [\n    "disconnect QmUDS3nsBD1X4XK5Jo836fed7SErTyTuQzRqWaiQAyBYMP success",\n  ]\n}\n')])])]),a("p",[t._v("Note that it can be used multiple times to signify multiple arguments.")]),t._v(" "),a("h3",{attrs:{id:"flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[t._v("#")]),t._v(" Flags")]),t._v(" "),a("p",[t._v("Flags are added through the query string. For example, the "),a("code",[t._v("--encoding=json")]),t._v(" flag is the "),a("code",[t._v("&encoding=json")]),t._v(" query parameter below:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('> curl -X POST "http://127.0.0.1:5001/api/v0/object/get?arg=QmaaqrHyAQm7gALkRW8DcfGX3u8q9rWKnxEMmf7m9z515w&encoding=json"\n{\n  "Links": [\n    {\n      "Name": "index.html",\n      "Hash": "QmYftndCvcEiuSZRX7njywX2AGSeHY2ASa7VryCq1mKwEw",\n      "Size": 1700\n    },\n    {\n      "Name": "static",\n      "Hash": "QmdtWFiasJeh2ymW3TD2cLHYxn1ryTuWoNpwieFyJriGTS",\n      "Size": 2428803\n    }\n  ],\n  "Data": "CAE="\n}\n')])])]),a("p",[t._v("Some flags may be repeated. For example, the "),a("code",[t._v("--status")]),t._v(" flag may be reused as below:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('> curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote/service/ls?name=myservice&status=pinned&status=pinning"\n')])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Some arguments may belong only to the CLI but appear here too. These usually belong to client-side processing of input, particularly in the "),a("code",[t._v("add")]),t._v(" command.")]),t._v(" "),a("p",[t._v("Additionally, as a convenience certain CLI commands may allow passing repeated flags as delimited lists such as"),a("br"),t._v(" "),a("code",[t._v("ipfs pin remote service ls --status=pinned,pinning")]),t._v("; however, this does not apply to the HTTP API.")])]),t._v(" "),a("h2",{attrs:{id:"http-status-codes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-status-codes"}},[t._v("#")]),t._v(" HTTP status codes")]),t._v(" "),a("p",[t._v("Status codes used at the RPC layer are simple:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("200")]),t._v(" - The request was processed or is being processed (streaming)")]),t._v(" "),a("li",[a("code",[t._v("500")]),t._v(" - RPC endpoint returned an error")]),t._v(" "),a("li",[a("code",[t._v("400")]),t._v(" - Malformed RPC, argument type error, etc")]),t._v(" "),a("li",[a("code",[t._v("403")]),t._v(" - RPC call forbidden")]),t._v(" "),a("li",[a("code",[t._v("404")]),t._v(" - RPC endpoint doesn't exist")]),t._v(" "),a("li",[a("code",[t._v("405")]),t._v(" - HTTP Method Not Allowed")])]),t._v(" "),a("p",[t._v("Status code "),a("code",[t._v("500")]),t._v(" means that the function "),a("em",[t._v("does")]),t._v(" exist, but IPFS was not able to fulfil the request because of an error. To know that reason, you have to look at the error message that is usually returned with the body of the response (if no error, check the daemon logs).")]),t._v(" "),a("p",[t._v("Streaming endpoints fail as above, unless they have started streaming. That means they will have sent a "),a("code",[t._v("200")]),t._v(" status code already. If an error happens during the stream, it will be included in a Trailer response header (some endpoints may additionally include an error in the last streamed object).")]),t._v(" "),a("p",[t._v("A "),a("code",[t._v("405")]),t._v(" error may mean that you are using the wrong HTTP method (i.e. GET instead of POST), and a "),a("code",[t._v("403")]),t._v(" error occurs in a browser due to Origin / CORS.")]),t._v(" "),a("h2",{attrs:{id:"origin-based-security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#origin-based-security"}},[t._v("#")]),t._v(" Origin-based security")]),t._v(" "),a("p",[t._v("When a request is sent from a browser, HTTP RPC API follows the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Origin-based security model"),a("OutboundLink")],1),t._v(", and expects the "),a("code",[t._v("Origin")]),t._v(" HTTP header to be present."),a("br"),t._v("\nThe API will return HTTP Error 403 when Origin is missing, does not match the API port, or is not safelisted via "),a("code",[t._v("API.HTTPHeaders.Access-Control-Allow-Origin")]),t._v(" in the config.")]),t._v(" "),a("h2",{attrs:{id:"http-rpc-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-rpc-commands"}},[t._v("#")]),t._v(" HTTP RPC commands")]),t._v(" "),a("h2",{attrs:{id:"api-v0-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-add"}},[t._v("#")]),t._v(" /api/v0/add")]),t._v(" "),a("p",[t._v("Add a file or directory to IPFS.")]),t._v(" "),a("h3",{attrs:{id:"arguments-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-2"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("quiet")]),t._v(" [bool]: Write minimal output. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("quieter")]),t._v(" [bool]: Write only final hash. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("silent")]),t._v(" [bool]: Write no output. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("progress")]),t._v(" [bool]: Stream progress data. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("trickle")]),t._v(" [bool]: Use trickle-dag format for dag generation. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("only-hash")]),t._v(" [bool]: Only chunk and hash - do not write to disk. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("wrap-with-directory")]),t._v(" [bool]: Wrap files with a directory object. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("chunker")]),t._v(" [string]: Chunking algorithm, size-[bytes], rabin-[min]-[avg]-[max] or buzhash. Default: "),a("code",[t._v("size-262144")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("pin")]),t._v(" [bool]: Pin this object when adding. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("raw-leaves")]),t._v(" [bool]: Use raw blocks for leaf nodes. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("nocopy")]),t._v(" [bool]: Add the file using filestore. Implies raw-leaves. (experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("fscache")]),t._v(" [bool]: Check the filestore for pre-existing blocks. (experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cid-version")]),t._v(" [int]: CID version. Defaults to 0 unless an option that depends on CIDv1 is passed. Passing version 1 will cause the raw-leaves option to default to true. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(" [string]: Hash function to use. Implies CIDv1 if not sha2-256. (experimental). Default: "),a("code",[t._v("sha2-256")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("inline")]),t._v(" [bool]: Inline small blocks into CIDs. (experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("inline-limit")]),t._v(" [int]: Maximum block size to inline. (experimental). Default: "),a("code",[t._v("32")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("path")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("add")]),t._v(" command not only allows adding files, but also uploading directories and complex hierarchies.")]),t._v(" "),a("p",[t._v("This happens as follows: Every part in the multipart request is a "),a("em",[t._v("directory")]),t._v(" or a "),a("em",[t._v("file")]),t._v(" to be added to IPFS.")]),t._v(" "),a("p",[t._v("Directory parts have a special content type "),a("code",[t._v("application/x-directory")]),t._v(". These parts do not carry any data. The part headers look as follows:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Content-Disposition: form-data; name="file"; filename="folderName"\nContent-Type: application/x-directory\n')])])]),a("p",[t._v("File parts carry the file payload after the following headers:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Abspath: /absolute/path/to/file.txt\nContent-Disposition: form-data; name="file"; filename="folderName%2Ffile.txt"\nContent-Type: application/octet-stream\n\n...contents...\n')])])]),a("p",[t._v('The above file includes its path in the "folderName/file.txt" hierarchy and IPFS will therefore be able to add it inside "folderName". The parts declaring the directories are optional when they have files inside and will be inferred from the filenames. In any case, a depth-first traversal of the directory tree is recommended to order the different parts making the request.')]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("Abspath")]),t._v(" header is included for filestore/urlstore features that are enabled with the "),a("code",[t._v("nocopy")]),t._v(" option and it can be set to the location of the file in the filesystem (within the IPFS root), or to its full web URL.")]),t._v(" "),a("h3",{attrs:{id:"response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Bytes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/add?quiet=<value>&quieter=<value>&silent=<value>&progress=<value>&trickle=<value>&only-hash=<value>&wrap-with-directory=<value>&chunker=size-262144&pin=true&raw-leaves=<value>&nocopy=<value>&fscache=<value>&cid-version=<value>&hash=sha2-256&inline=<value>&inline-limit=32"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bitswap-ledger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bitswap-ledger"}},[t._v("#")]),t._v(" /api/v0/bitswap/ledger")]),t._v(" "),a("p",[t._v("Show the current ledger for a peer.")]),t._v(" "),a("h3",{attrs:{id:"arguments-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-3"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The PeerID (B58) of the ledger to inspect. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-2"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Exchanged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Recv"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Sent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<float64>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-2"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/ledger?arg=<peer>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bitswap-reprovide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bitswap-reprovide"}},[t._v("#")]),t._v(" /api/v0/bitswap/reprovide")]),t._v(" "),a("p",[t._v("Trigger reprovider.")]),t._v(" "),a("h3",{attrs:{id:"arguments-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-4"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-3"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-3"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/reprovide"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bitswap-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bitswap-stat"}},[t._v("#")]),t._v(" /api/v0/bitswap/stat")]),t._v(" "),a("p",[t._v("Show some diagnostic information on the bitswap agent.")]),t._v(" "),a("h3",{attrs:{id:"arguments-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-5"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("human")]),t._v(" [bool]: Print sizes in human readable format (e.g., 1K 234M 2G). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-4"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BlocksReceived"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BlocksSent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DataReceived"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DataSent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DupBlksReceived"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DupDataReceived"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"MessagesReceived"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ProvideBufLen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Wantlist"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-4"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/stat?verbose=<value>&human=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bitswap-wantlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bitswap-wantlist"}},[t._v("#")]),t._v(" /api/v0/bitswap/wantlist")]),t._v(" "),a("p",[t._v("Show blocks currently on the wantlist.")]),t._v(" "),a("h3",{attrs:{id:"arguments-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-6"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("peer")]),t._v(" [string]: Specify which peer to show wantlist for. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-5"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Keys"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-5"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/wantlist?peer=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-block-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-block-get"}},[t._v("#")]),t._v(" /api/v0/block/get")]),t._v(" "),a("p",[t._v("Get a raw IPFS block.")]),t._v(" "),a("h3",{attrs:{id:"arguments-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-7"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The base58 multihash of an existing block to get. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-6"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-6"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/block/get?arg=<key>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-block-put"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-block-put"}},[t._v("#")]),t._v(" /api/v0/block/put")]),t._v(" "),a("p",[t._v("Store input as an IPFS block.")]),t._v(" "),a("h3",{attrs:{id:"arguments-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-8"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("format")]),t._v(" [string]: cid format for blocks to be created with. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("mhtype")]),t._v(" [string]: multihash hash function. Default: "),a("code",[t._v("sha2-256")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("mhlen")]),t._v(" [int]: multihash hash length. Default: "),a("code",[t._v("-1")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("pin")]),t._v(" [bool]: pin added blocks recursively. Default: "),a("code",[t._v("false")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-2"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-7"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-7"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/block/put?format=<value>&mhtype=sha2-256&mhlen=-1&pin=false"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-block-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-block-rm"}},[t._v("#")]),t._v(" /api/v0/block/rm")]),t._v(" "),a("p",[t._v("Remove IPFS block(s).")]),t._v(" "),a("h3",{attrs:{id:"arguments-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-9"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Bash58 encoded multihash of block(s) to remove. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("force")]),t._v(" [bool]: Ignore nonexistent blocks. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("quiet")]),t._v(" [bool]: Write minimal output. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-8"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Error"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-8"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/block/rm?arg=<hash>&force=<value>&quiet=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-block-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-block-stat"}},[t._v("#")]),t._v(" /api/v0/block/stat")]),t._v(" "),a("p",[t._v("Print information of a raw IPFS block.")]),t._v(" "),a("h3",{attrs:{id:"arguments-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-10"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The base58 multihash of an existing block to stat. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-9"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-9"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/block/stat?arg=<key>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap"}},[t._v("#")]),t._v(" /api/v0/bootstrap")]),t._v(" "),a("p",[t._v("Show or edit the list of bootstrap peers.")]),t._v(" "),a("h3",{attrs:{id:"arguments-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-11"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-10"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-10"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap-add"}},[t._v("#")]),t._v(" /api/v0/bootstrap/add")]),t._v(" "),a("p",[t._v("Add peers to the bootstrap list.")]),t._v(" "),a("h3",{attrs:{id:"arguments-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-12"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: A peer to add to the bootstrap list (in the format '<multiaddr>/<peerID>') Required: no.")]),t._v(" "),a("li",[a("code",[t._v("default")]),t._v(" [bool]: Add default bootstrap nodes. (Deprecated, use 'default' subcommand instead). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-11"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-11"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/add?arg=<peer>&default=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap-add-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap-add-default"}},[t._v("#")]),t._v(" /api/v0/bootstrap/add/default")]),t._v(" "),a("p",[t._v("Add default peers to the bootstrap list.")]),t._v(" "),a("h3",{attrs:{id:"arguments-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-13"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-12"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-12"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/add/default"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap-list"}},[t._v("#")]),t._v(" /api/v0/bootstrap/list")]),t._v(" "),a("p",[t._v("Show peers in the bootstrap list.")]),t._v(" "),a("h3",{attrs:{id:"arguments-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-14"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-13"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-13"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/list"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap-rm"}},[t._v("#")]),t._v(" /api/v0/bootstrap/rm")]),t._v(" "),a("p",[t._v("Remove peers from the bootstrap list.")]),t._v(" "),a("h3",{attrs:{id:"arguments-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-15"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: A peer to add to the bootstrap list (in the format '<multiaddr>/<peerID>') Required: no.")]),t._v(" "),a("li",[a("code",[t._v("all")]),t._v(" [bool]: Remove all bootstrap peers. (Deprecated, use 'all' subcommand). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-14"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-14"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/rm?arg=<peer>&all=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-bootstrap-rm-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-bootstrap-rm-all"}},[t._v("#")]),t._v(" /api/v0/bootstrap/rm/all")]),t._v(" "),a("p",[t._v("Remove all peers from the bootstrap list.")]),t._v(" "),a("h3",{attrs:{id:"arguments-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-16"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-15"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-15"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/rm/all"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cat"}},[t._v("#")]),t._v(" /api/v0/cat")]),t._v(" "),a("p",[t._v("Show IPFS object data.")]),t._v(" "),a("h3",{attrs:{id:"arguments-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-17"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The path to the IPFS object(s) to be outputted. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("offset")]),t._v(" [int64]: Byte offset to begin reading from. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("length")]),t._v(" [int64]: Maximum number of bytes to read. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-16"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-16"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cat?arg=<ipfs-path>&offset=<value>&length=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cid-base32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cid-base32"}},[t._v("#")]),t._v(" /api/v0/cid/base32")]),t._v(" "),a("p",[t._v("Convert CIDs to Base32 CID version 1.")]),t._v(" "),a("h3",{attrs:{id:"arguments-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-18"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Cids to convert. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-17"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CidStr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ErrorMsg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Formatted"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-17"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cid/base32?arg=<cid>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cid-bases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cid-bases"}},[t._v("#")]),t._v(" /api/v0/cid/bases")]),t._v(" "),a("p",[t._v("List available multibase encodings.")]),t._v(" "),a("h3",{attrs:{id:"arguments-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-19"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("prefix")]),t._v(" [bool]: also include the single letter prefixes in addition to the code. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("numeric")]),t._v(" [bool]: also include numeric codes. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-18"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-18"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cid/bases?prefix=<value>&numeric=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cid-codecs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cid-codecs"}},[t._v("#")]),t._v(" /api/v0/cid/codecs")]),t._v(" "),a("p",[t._v("List available CID codecs.")]),t._v(" "),a("h3",{attrs:{id:"arguments-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-20"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("numeric")]),t._v(" [bool]: also include numeric codes. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-19"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-19"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cid/codecs?numeric=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cid-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cid-format"}},[t._v("#")]),t._v(" /api/v0/cid/format")]),t._v(" "),a("p",[t._v("Format and convert a CID in various useful ways.")]),t._v(" "),a("h3",{attrs:{id:"arguments-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-21"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Cids to format. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("f")]),t._v(" [string]: Printf style format string. Default: %s. Default: "),a("code",[t._v("%s")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("v")]),t._v(" [string]: CID version to convert to. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("codec")]),t._v(" [string]: CID codec to convert to. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("b")]),t._v(" [string]: Multibase to display CID in. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-20"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CidStr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ErrorMsg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Formatted"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-20"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cid/format?arg=<cid>&f=%s&v=<value>&codec=<value>&b=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-cid-hashes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-cid-hashes"}},[t._v("#")]),t._v(" /api/v0/cid/hashes")]),t._v(" "),a("p",[t._v("List available multihashes.")]),t._v(" "),a("h3",{attrs:{id:"arguments-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-22"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("numeric")]),t._v(" [bool]: also include numeric codes. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-21"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-21"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/cid/hashes?numeric=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-commands"}},[t._v("#")]),t._v(" /api/v0/commands")]),t._v(" "),a("p",[t._v("List all available commands.")]),t._v(" "),a("h3",{attrs:{id:"arguments-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-23"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flags")]),t._v(" [bool]: Show command flags. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-22"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Options"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Subcommands"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Options"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Subcommands"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-22"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/commands?flags=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-commands-completion-bash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-commands-completion-bash"}},[t._v("#")]),t._v(" /api/v0/commands/completion/bash")]),t._v(" "),a("p",[t._v("Generate bash shell completions.")]),t._v(" "),a("h3",{attrs:{id:"arguments-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-24"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-23"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-23"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/commands/completion/bash"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-config"}},[t._v("#")]),t._v(" /api/v0/config")]),t._v(" "),a("p",[t._v("Get and set IPFS config values.")]),t._v(" "),a("h3",{attrs:{id:"arguments-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-25"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(' [string]: The key of the config entry (e.g. "Addresses.API"). Required: '),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: The value to set the config entry to. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("bool")]),t._v(" [bool]: Set a boolean value. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("json")]),t._v(" [bool]: Parse stringified JSON. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-24"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<object>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-24"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/config?arg=<key>&arg=<value>&bool=<value>&json=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-config-edit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-config-edit"}},[t._v("#")]),t._v(" /api/v0/config/edit")]),t._v(" "),a("p",[t._v("Open the config file for editing in $EDITOR.")]),t._v(" "),a("h3",{attrs:{id:"arguments-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-26"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-25"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-25"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/config/edit"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-config-profile-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-config-profile-apply"}},[t._v("#")]),t._v(" /api/v0/config/profile/apply")]),t._v(" "),a("p",[t._v("Apply profile to config.")]),t._v(" "),a("h3",{attrs:{id:"arguments-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-27"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The profile to apply to the config. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("dry-run")]),t._v(" [bool]: print difference between the current config and the config that would be generated. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-26"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"NewCfg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<object>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OldCfg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<object>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-26"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/config/profile/apply?arg=<profile>&dry-run=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-config-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-config-replace"}},[t._v("#")]),t._v(" /api/v0/config/replace")]),t._v(" "),a("p",[t._v("Replace the config with <file>.")]),t._v(" "),a("h3",{attrs:{id:"arguments-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-28"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("h3",{attrs:{id:"request-body-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-3"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("file")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-27"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-27"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/config/replace"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-config-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-config-show"}},[t._v("#")]),t._v(" /api/v0/config/show")]),t._v(" "),a("p",[t._v("Output config file contents.")]),t._v(" "),a("h3",{attrs:{id:"arguments-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-29"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-28"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<object>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-28"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/config/show"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-export"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-export"}},[t._v("#")]),t._v(" /api/v0/dag/export")]),t._v(" "),a("p",[t._v("Streams the selected DAG as a .car stream on stdout.")]),t._v(" "),a("h3",{attrs:{id:"arguments-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-30"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: CID of a root to recursively export Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("progress")]),t._v(" [bool]: Display progress on CLI. Defaults to true when STDERR is a TTY. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-29"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-29"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dag/export?arg=<root>&progress=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-get"}},[t._v("#")]),t._v(" /api/v0/dag/get")]),t._v(" "),a("p",[t._v("Get a DAG node from IPFS.")]),t._v(" "),a("h3",{attrs:{id:"arguments-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-31"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The object to get Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("output-codec")]),t._v(" [string]: Format that the object will be encoded as. Default: "),a("code",[t._v("dag-json")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-30"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-30"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dag/get?arg=<ref>&output-codec=dag-json"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-import"}},[t._v("#")]),t._v(" /api/v0/dag/import")]),t._v(" "),a("p",[t._v("Import the contents of .car files")]),t._v(" "),a("h3",{attrs:{id:"arguments-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-32"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pin-roots")]),t._v(" [bool]: Pin optional roots listed in the .car headers after importing. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("silent")]),t._v(" [bool]: No output. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("stats")]),t._v(" [bool]: Output stats. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-4"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("path")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-31"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Root"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PinErrorMsg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Stats"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BlockBytesCount"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BlockCount"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-31"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/dag/import?pin-roots=true&silent=<value>&stats=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-put"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-put"}},[t._v("#")]),t._v(" /api/v0/dag/put")]),t._v(" "),a("p",[t._v("Add a DAG node to IPFS.")]),t._v(" "),a("h3",{attrs:{id:"arguments-33"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-33"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("store-codec")]),t._v(" [string]: Codec that the stored object will be encoded with. Default: "),a("code",[t._v("dag-cbor")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("input-codec")]),t._v(" [string]: Codec that the input object is encoded in. Default: "),a("code",[t._v("dag-json")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("pin")]),t._v(" [bool]: Pin this object when adding. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(" [string]: Hash function to use. Default: "),a("code",[t._v("sha2-256")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-5"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("object data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-32"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-32"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/dag/put?store-codec=dag-cbor&input-codec=dag-json&pin=<value>&hash=sha2-256"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-resolve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-resolve"}},[t._v("#")]),t._v(" /api/v0/dag/resolve")]),t._v(" "),a("p",[t._v("Resolve IPLD block.")]),t._v(" "),a("h3",{attrs:{id:"arguments-34"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-34"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The path to resolve Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-33"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-33"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"RemPath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-33"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-33"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dag/resolve?arg=<ref>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dag-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dag-stat"}},[t._v("#")]),t._v(" /api/v0/dag/stat")]),t._v(" "),a("p",[t._v("Gets stats for a DAG.")]),t._v(" "),a("h3",{attrs:{id:"arguments-35"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-35"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: CID of a DAG root to get statistics for Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("progress")]),t._v(" [bool]: Return progressive data while reading through the DAG. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-34"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-34"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"NumBlocks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-34"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-34"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dag/stat?arg=<root>&progress=true"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-findpeer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-findpeer"}},[t._v("#")]),t._v(" /api/v0/dht/findpeer")]),t._v(" "),a("p",[t._v("Find the multiaddresses associated with a Peer ID.")]),t._v(" "),a("h3",{attrs:{id:"arguments-36"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-36"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The ID of the peer to search for. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-35"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-35"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-35"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-35"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dht/findpeer?arg=<peerID>&verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-findprovs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-findprovs"}},[t._v("#")]),t._v(" /api/v0/dht/findprovs")]),t._v(" "),a("p",[t._v("Find peers that can provide a specific value, given a key.")]),t._v(" "),a("h3",{attrs:{id:"arguments-37"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-37"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The key to find providers for. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("num-providers")]),t._v(" [int]: The number of providers to find. Default: "),a("code",[t._v("20")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-36"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-36"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-36"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-36"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dht/findprovs?arg=<key>&verbose=<value>&num-providers=20"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-get"}},[t._v("#")]),t._v(" /api/v0/dht/get")]),t._v(" "),a("p",[t._v("Given a key, query the routing system for its best value.")]),t._v(" "),a("h3",{attrs:{id:"arguments-38"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-38"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The key to find a value for. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-37"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-37"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-37"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-37"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dht/get?arg=<key>&verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-provide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-provide"}},[t._v("#")]),t._v(" /api/v0/dht/provide")]),t._v(" "),a("p",[t._v("Announce to the network that you are providing given values.")]),t._v(" "),a("h3",{attrs:{id:"arguments-39"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-39"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The key[s] to send provide records for. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("recursive")]),t._v(" [bool]: Recursively provide entire graph. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-38"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-38"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-38"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-38"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dht/provide?arg=<key>&verbose=<value>&recursive=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-put"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-put"}},[t._v("#")]),t._v(" /api/v0/dht/put")]),t._v(" "),a("p",[t._v("Write a key/value pair to the routing system.")]),t._v(" "),a("h3",{attrs:{id:"arguments-40"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-40"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("arg")]),t._v(" [string]: The key to store the value at. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])])]),t._v(" "),a("h3",{attrs:{id:"request-body-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-6"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("value-file")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-39"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-39"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-39"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-39"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/dht/put?arg=<key>&verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dht-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dht-query"}},[t._v("#")]),t._v(" /api/v0/dht/query")]),t._v(" "),a("p",[t._v("Find the closest Peer IDs to a given Peer ID by querying the DHT.")]),t._v(" "),a("h3",{attrs:{id:"arguments-41"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-41"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The peerID to run the query against. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-40"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-40"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Extra"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<peer-id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Responses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<multiaddr-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer-id"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-40"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-40"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dht/query?arg=<peerID>&verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-diag-cmds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-diag-cmds"}},[t._v("#")]),t._v(" /api/v0/diag/cmds")]),t._v(" "),a("p",[t._v("List commands run on this IPFS node.")]),t._v(" "),a("h3",{attrs:{id:"arguments-42"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-42"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-41"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-41"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Active"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Args"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Command"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"EndTime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<timestamp>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Options"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<object>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"StartTime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<timestamp>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-41"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-41"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds?verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-diag-cmds-clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-diag-cmds-clear"}},[t._v("#")]),t._v(" /api/v0/diag/cmds/clear")]),t._v(" "),a("p",[t._v("Clear inactive requests from the log.")]),t._v(" "),a("h3",{attrs:{id:"arguments-43"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-43"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-42"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-42"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-42"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-42"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds/clear"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-diag-cmds-set-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-diag-cmds-set-time"}},[t._v("#")]),t._v(" /api/v0/diag/cmds/set-time")]),t._v(" "),a("p",[t._v("Set how long to keep inactive requests in the log.")]),t._v(" "),a("h3",{attrs:{id:"arguments-44"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-44"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Time to keep inactive requests in log. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-43"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-43"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-43"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-43"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds/set-time?arg=<time>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-diag-profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-diag-profile"}},[t._v("#")]),t._v(" /api/v0/diag/profile")]),t._v(" "),a("p",[t._v("Collect a performance profile for debugging.")]),t._v(" "),a("h3",{attrs:{id:"arguments-45"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-45"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("output")]),t._v(" [string]: The path where the output should be stored. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cpu-profile-time")]),t._v(" [string]: The amount of time spent profiling CPU usage. Default: "),a("code",[t._v("30s")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-44"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-44"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-44"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-44"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/diag/profile?output=<value>&cpu-profile-time=30s"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-diag-sys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-diag-sys"}},[t._v("#")]),t._v(" /api/v0/diag/sys")]),t._v(" "),a("p",[t._v("Print system diagnostic information.")]),t._v(" "),a("h3",{attrs:{id:"arguments-46"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-46"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-45"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-45"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-45"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-45"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/diag/sys"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-dns"}},[t._v("#")]),t._v(" /api/v0/dns")]),t._v(" "),a("p",[t._v("Resolve DNS links.")]),t._v(" "),a("h3",{attrs:{id:"arguments-47"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-47"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The domain-name name to resolve. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("recursive")]),t._v(" [bool]: Resolve until the result is not a DNS link. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-46"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-46"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-46"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-46"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/dns?arg=<domain-name>&recursive=true"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-file-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-file-ls"}},[t._v("#")]),t._v(" /api/v0/file/ls")]),t._v(" "),a("p",[t._v("List directory contents for Unix filesystem objects. Deprecated: Use 'ipfs ls' instead.")]),t._v(" "),a("h3",{attrs:{id:"arguments-48"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-48"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The path to the IPFS object(s) to list links from. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-47"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-47"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Arguments"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Objects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-47"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-47"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/file/ls?arg=<ipfs-path>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-chcid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-chcid"}},[t._v("#")]),t._v(" /api/v0/files/chcid")]),t._v(" "),a("p",[t._v("Change the CID version or hash function of the root node of a given path.")]),t._v(" "),a("h3",{attrs:{id:"arguments-49"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-49"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to change. Default: '/'. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cid-version")]),t._v(" [int]: Cid version to use. (experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(" [string]: Hash function to use. Will set Cid version to 1 if used. (experimental). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-48"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-48"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-48"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-48"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/chcid?arg=<path>&cid-version=<value>&hash=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-cp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-cp"}},[t._v("#")]),t._v(" /api/v0/files/cp")]),t._v(" "),a("p",[t._v("Add references to IPFS files and directories in MFS (or copy within MFS).")]),t._v(" "),a("h3",{attrs:{id:"arguments-50"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-50"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Source IPFS or MFS path to copy. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Destination within MFS. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("parents")]),t._v(" [bool]: Make parent directories as needed. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-49"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-49"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-49"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-49"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/cp?arg=<source>&arg=<dest>&parents=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-flush"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-flush"}},[t._v("#")]),t._v(" /api/v0/files/flush")]),t._v(" "),a("p",[t._v("Flush a given path's data to disk.")]),t._v(" "),a("h3",{attrs:{id:"arguments-51"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-51"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to flush. Default: '/'. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-50"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-50"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-50"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-50"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/flush?arg=<path>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-ls"}},[t._v("#")]),t._v(" /api/v0/files/ls")]),t._v(" "),a("p",[t._v("List directories in the local mutable namespace.")]),t._v(" "),a("h3",{attrs:{id:"arguments-52"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-52"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to show listing for. Defaults to '/'. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("long")]),t._v(" [bool]: Use long listing format. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("U")]),t._v(" [bool]: Do not sort; list entries in directory order. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-51"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-51"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Entries"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-51"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-51"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/ls?arg=<path>&long=<value>&U=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-mkdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-mkdir"}},[t._v("#")]),t._v(" /api/v0/files/mkdir")]),t._v(" "),a("p",[t._v("Make directories.")]),t._v(" "),a("h3",{attrs:{id:"arguments-53"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-53"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to dir to make. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("parents")]),t._v(" [bool]: No error if existing, make parent directories as needed. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cid-version")]),t._v(" [int]: Cid version to use. (experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(" [string]: Hash function to use. Will set Cid version to 1 if used. (experimental). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-52"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-52"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-52"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-52"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/mkdir?arg=<path>&parents=<value>&cid-version=<value>&hash=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-mv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-mv"}},[t._v("#")]),t._v(" /api/v0/files/mv")]),t._v(" "),a("p",[t._v("Move files.")]),t._v(" "),a("h3",{attrs:{id:"arguments-54"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-54"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Source file to move. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Destination path for file to be moved to. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-53"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-53"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-53"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-53"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/mv?arg=<source>&arg=<dest>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-read"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-read"}},[t._v("#")]),t._v(" /api/v0/files/read")]),t._v(" "),a("p",[t._v("Read a file in a given MFS.")]),t._v(" "),a("h3",{attrs:{id:"arguments-55"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-55"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to file to be read. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("offset")]),t._v(" [int64]: Byte offset to begin reading from. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("count")]),t._v(" [int64]: Maximum number of bytes to read. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-54"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-54"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-54"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-54"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/read?arg=<path>&offset=<value>&count=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-rm"}},[t._v("#")]),t._v(" /api/v0/files/rm")]),t._v(" "),a("p",[t._v("Remove a file.")]),t._v(" "),a("h3",{attrs:{id:"arguments-56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-56"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: File to remove. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("recursive")]),t._v(" [bool]: Recursively remove directories. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("force")]),t._v(" [bool]: Forcibly remove target at path; implies -r for directories. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-55"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-55"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-55"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-55"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/rm?arg=<path>&recursive=<value>&force=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-stat"}},[t._v("#")]),t._v(" /api/v0/files/stat")]),t._v(" "),a("p",[t._v("Display file status.")]),t._v(" "),a("h3",{attrs:{id:"arguments-57"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-57"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to node to stat. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("format")]),t._v(" [string]: Print statistics in given format. Allowed tokens: <hash> <size> <cumulsize> <type> <childs>. Conflicts with other format options. Default: <hash>"),a("br"),t._v("\nSize: <size>"),a("br"),t._v("\nCumulativeSize: <cumulsize>"),a("br"),t._v("\nChildBlocks: <childs>"),a("br"),t._v("\nType: <type>. Default: "),a("code",[t._v("<hash> Size: <size> CumulativeSize: <cumulsize> ChildBlocks: <childs> Type: <type>")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("hash")]),t._v(" [bool]: Print only hash. Implies '--format=<hash>'. Conflicts with other format options. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" [bool]: Print only size. Implies '--format=<cumulsize>'. Conflicts with other format options. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("with-local")]),t._v(" [bool]: Compute the amount of the dag that is local, and if possible the total size. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-56"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Blocks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CumulativeSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Local"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SizeLocal"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"WithLocality"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-56"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/files/stat?arg=<path>&format=<hash> Size: <size> CumulativeSize: <cumulsize> ChildBlocks: <childs> Type: <type>&hash=<value>&size=<value>&with-local=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-files-write"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-files-write"}},[t._v("#")]),t._v(" /api/v0/files/write")]),t._v(" "),a("p",[t._v("Write to a mutable file in a given filesystem.")]),t._v(" "),a("h3",{attrs:{id:"arguments-58"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-58"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("arg")]),t._v(" [string]: Path to write to. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("offset")]),t._v(" [int64]: Byte offset to begin writing at. Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("create")]),t._v(" [bool]: Create the file if it does not exist. Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parents")]),t._v(" [bool]: Make parent directories as needed. Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("truncate")]),t._v(" [bool]: Truncate the file to size zero before writing. Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("count")]),t._v(" [int64]: Maximum number of bytes to read. Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("raw-leaves")]),t._v(" [bool]: Use raw blocks for newly created leaf nodes. (experimental). Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cid-version")]),t._v(" [int]: Cid version to use. (experimental). Required: no.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("hash")]),t._v(" [string]: Hash function to use. Will set Cid version to 1 if used. (experimental). Required: no.")])])]),t._v(" "),a("h3",{attrs:{id:"request-body-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-7"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-57"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-57"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-57"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-57"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/files/write?arg=<path>&offset=<value>&create=<value>&parents=<value>&truncate=<value>&count=<value>&raw-leaves=<value>&cid-version=<value>&hash=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-filestore-dups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-filestore-dups"}},[t._v("#")]),t._v(" /api/v0/filestore/dups")]),t._v(" "),a("p",[t._v("List blocks that are both in the filestore and standard block storage.")]),t._v(" "),a("h3",{attrs:{id:"arguments-59"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-59"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-58"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-58"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Err"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Ref"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-58"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-58"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/filestore/dups"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-filestore-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-filestore-ls"}},[t._v("#")]),t._v(" /api/v0/filestore/ls")]),t._v(" "),a("p",[t._v("List objects in filestore.")]),t._v(" "),a("h3",{attrs:{id:"arguments-60"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-60"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Cid of objects to list. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("file-order")]),t._v(" [bool]: sort the results based on the path of the backing file. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-59"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-59"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ErrorMsg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"FilePath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Offset"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int32>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-59"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-59"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/filestore/ls?arg=<obj>&file-order=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-filestore-verify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-filestore-verify"}},[t._v("#")]),t._v(" /api/v0/filestore/verify")]),t._v(" "),a("p",[t._v("Verify objects in filestore.")]),t._v(" "),a("h3",{attrs:{id:"arguments-61"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-61"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Cid of objects to verify. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("file-order")]),t._v(" [bool]: verify the objects based on the order of the backing file. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-60"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-60"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ErrorMsg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"FilePath"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Offset"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int32>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-60"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-60"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/filestore/verify?arg=<obj>&file-order=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-get"}},[t._v("#")]),t._v(" /api/v0/get")]),t._v(" "),a("p",[t._v("Download IPFS objects.")]),t._v(" "),a("h3",{attrs:{id:"arguments-62"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-62"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The path to the IPFS object(s) to be outputted. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("output")]),t._v(" [string]: The path where the output should be stored. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("archive")]),t._v(" [bool]: Output a TAR archive. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("compress")]),t._v(" [bool]: Compress the output with GZIP compression. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("compression-level")]),t._v(" [int]: The level of compression (1-9). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-61"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-61"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-61"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-61"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/get?arg=<ipfs-path>&output=<value>&archive=<value>&compress=<value>&compression-level=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-id"}},[t._v("#")]),t._v(" /api/v0/id")]),t._v(" "),a("p",[t._v("Show IPFS node id info.")]),t._v(" "),a("h3",{attrs:{id:"arguments-63"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-63"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Peer.ID of node to look up. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("format")]),t._v(" [string]: Optional output format. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("peerid-base")]),t._v(" [string]: Encoding used for peer IDs: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("b58mh")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-62"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-62"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Addresses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AgentVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ProtocolVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Protocols"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PublicKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-62"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-62"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/id?arg=<peerid>&format=<value>&peerid-base=b58mh"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-export"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-export"}},[t._v("#")]),t._v(" /api/v0/key/export")]),t._v(" "),a("p",[t._v("Export a keypair")]),t._v(" "),a("h3",{attrs:{id:"arguments-64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-64"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: name of key to export Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("output")]),t._v(" [string]: The path where the output should be stored. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-63"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-63"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-63"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-63"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/export?arg=<name>&output=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-gen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-gen"}},[t._v("#")]),t._v(" /api/v0/key/gen")]),t._v(" "),a("p",[t._v("Create a new keypair")]),t._v(" "),a("h3",{attrs:{id:"arguments-65"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-65"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: name of key to create Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("type")]),t._v(" [string]: type of the key to create: rsa, ed25519. Default: "),a("code",[t._v("ed25519")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" [int]: size of the key to generate. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-64"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-64"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/gen?arg=<name>&type=ed25519&size=<value>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-import"}},[t._v("#")]),t._v(" /api/v0/key/import")]),t._v(" "),a("p",[t._v("Import a key and prints imported key id")]),t._v(" "),a("h3",{attrs:{id:"arguments-66"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-66"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("arg")]),t._v(" [string]: name to associate with key in keychain Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])])]),t._v(" "),a("h3",{attrs:{id:"request-body-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-8"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("key")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-65"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-65"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-65"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-65"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/key/import?arg=<name>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-list"}},[t._v("#")]),t._v(" /api/v0/key/list")]),t._v(" "),a("p",[t._v("List all local keypairs.")]),t._v(" "),a("h3",{attrs:{id:"arguments-67"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-67"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("l")]),t._v(" [bool]: Show extra information about keys. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-66"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-66"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Keys"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-66"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-66"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/list?l=<value>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-rename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-rename"}},[t._v("#")]),t._v(" /api/v0/key/rename")]),t._v(" "),a("p",[t._v("Rename a keypair.")]),t._v(" "),a("h3",{attrs:{id:"arguments-68"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-68"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: name of key to rename Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: new name of the key Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("force")]),t._v(" [bool]: Allow to overwrite an existing key. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-67"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-67"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Now"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Overwrite"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Was"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-67"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-67"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/rename?arg=<name>&arg=<newName>&force=<value>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-rm"}},[t._v("#")]),t._v(" /api/v0/key/rm")]),t._v(" "),a("p",[t._v("Remove a keypair.")]),t._v(" "),a("h3",{attrs:{id:"arguments-69"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-69"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: names of keys to remove Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("l")]),t._v(" [bool]: Show extra information about keys. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-68"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-68"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Keys"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-68"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-68"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/rm?arg=<name>&l=<value>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-key-rotate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-key-rotate"}},[t._v("#")]),t._v(" /api/v0/key/rotate")]),t._v(" "),a("p",[t._v("Rotates the IPFS identity.")]),t._v(" "),a("h3",{attrs:{id:"arguments-70"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-70"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("oldkey")]),t._v(" [string]: Keystore name to use for backing up your existing identity. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("type")]),t._v(" [string]: type of the key to create: rsa, ed25519. Default: "),a("code",[t._v("ed25519")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" [int]: size of the key to generate. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-69"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-69"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-69"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-69"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/key/rotate?oldkey=<value>&type=ed25519&size=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-log-level"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-log-level"}},[t._v("#")]),t._v(" /api/v0/log/level")]),t._v(" "),a("p",[t._v("Change the logging level.")]),t._v(" "),a("h3",{attrs:{id:"arguments-71"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-71"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The subsystem logging identifier. Use 'all' for all subsystems. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: The log level, with 'debug' the most verbose and 'fatal' the least verbose."),a("br"),t._v("\nOne of: debug, info, warn, error, dpanic, panic, fatal."),a("br"),t._v("\nRequired: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-70"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-70"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-70"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-70"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/log/level?arg=<subsystem>&arg=<level>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-log-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-log-ls"}},[t._v("#")]),t._v(" /api/v0/log/ls")]),t._v(" "),a("p",[t._v("List the logging subsystems.")]),t._v(" "),a("h3",{attrs:{id:"arguments-72"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-72"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-71"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-71"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Strings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-71"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-71"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/log/ls"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-log-tail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-log-tail"}},[t._v("#")]),t._v(" /api/v0/log/tail")]),t._v(" "),a("p",[t._v("Read the event log.")]),t._v(" "),a("h3",{attrs:{id:"arguments-73"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-73"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-72"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-72"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-72"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-72"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/log/tail"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-ls"}},[t._v("#")]),t._v(" /api/v0/ls")]),t._v(" "),a("p",[t._v("List directory contents for Unix filesystem objects.")]),t._v(" "),a("h3",{attrs:{id:"arguments-74"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-74"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The path to the IPFS object(s) to list links from. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("headers")]),t._v(" [bool]: Print table headers (Hash, Size, Name). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("resolve-type")]),t._v(" [bool]: Resolve linked objects to find out their types. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" [bool]: Resolve linked objects to find out their file size. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("stream")]),t._v(" [bool]: Enable experimental streaming of directory entries as they are traversed. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-73"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-73"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Objects"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Target"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int32>"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-73"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-73"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/ls?arg=<ipfs-path>&headers=<value>&resolve-type=true&size=true&stream=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-mount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-mount"}},[t._v("#")]),t._v(" /api/v0/mount")]),t._v(" "),a("p",[t._v("Mounts IPFS to the filesystem (read-only).")]),t._v(" "),a("h3",{attrs:{id:"arguments-75"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-75"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ipfs-path")]),t._v(" [string]: The path where IPFS should be mounted. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-path")]),t._v(" [string]: The path where IPNS should be mounted. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-74"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-74"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"FuseAllowOther"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"IPFS"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"IPNS"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-74"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-74"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/mount?ipfs-path=<value>&ipns-path=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-multibase-decode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-multibase-decode"}},[t._v("#")]),t._v(" /api/v0/multibase/decode")]),t._v(" "),a("p",[t._v("Decode multibase string")]),t._v(" "),a("h3",{attrs:{id:"arguments-76"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-76"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("h3",{attrs:{id:"request-body-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-9"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("encoded_file")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-75"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-75"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-75"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-75"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/multibase/decode"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-multibase-encode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-multibase-encode"}},[t._v("#")]),t._v(" /api/v0/multibase/encode")]),t._v(" "),a("p",[t._v("Encode data into multibase string")]),t._v(" "),a("h3",{attrs:{id:"arguments-77"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-77"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("b")]),t._v(" [string]: multibase encoding. Default: "),a("code",[t._v("base64url")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-10"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("file")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-76"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-76"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-76"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-76"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/multibase/encode?b=base64url"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-multibase-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-multibase-list"}},[t._v("#")]),t._v(" /api/v0/multibase/list")]),t._v(" "),a("p",[t._v("List available multibase encodings.")]),t._v(" "),a("h3",{attrs:{id:"arguments-78"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-78"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("prefix")]),t._v(" [bool]: also include the single letter prefixes in addition to the code. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("numeric")]),t._v(" [bool]: also include numeric codes. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-77"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-77"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-77"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-77"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/multibase/list?prefix=<value>&numeric=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-multibase-transcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-multibase-transcode"}},[t._v("#")]),t._v(" /api/v0/multibase/transcode")]),t._v(" "),a("p",[t._v("Transcode multibase string between bases")]),t._v(" "),a("h3",{attrs:{id:"arguments-79"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-79"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("b")]),t._v(" [string]: multibase encoding. Default: "),a("code",[t._v("base64url")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-11"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("encoded_file")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-78"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-78"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-78"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-78"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/multibase/transcode?b=base64url"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-name-publish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-name-publish"}},[t._v("#")]),t._v(" /api/v0/name/publish")]),t._v(" "),a("p",[t._v("Publish IPNS names.")]),t._v(" "),a("h3",{attrs:{id:"arguments-80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-80"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: ipfs path of the object to be published. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("resolve")]),t._v(" [bool]: Check if the given path can be resolved before publishing. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("lifetime")]),t._v(" [string]: Time duration that the record will be valid for."),a("br"),t._v('\nThis accepts durations such as "300s", "1.5h" or "2h45m". Valid time units are'),a("br"),t._v('\n"ns", "us" (or "Âµs"), "ms", "s", "m", "h". Default: '),a("code",[t._v("24h")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("allow-offline")]),t._v(" [bool]: When offline, save the IPNS record to the the local datastore without broadcasting to the network instead of simply failing. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ttl")]),t._v(" [string]: Time duration this record should be cached for. Uses the same syntax as the lifetime option. (caution: experimental). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("key")]),t._v(" [string]: Name of the key to be used or a valid PeerID, as listed by 'ipfs key list -l'. Default: "),a("code",[t._v("self")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("quieter")]),t._v(" [bool]: Write only final hash. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-79"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-79"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-79"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-79"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/name/publish?arg=<ipfs-path>&resolve=true&lifetime=24h&allow-offline=<value>&ttl=<value>&key=self&quieter=<value>&ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-name-pubsub-cancel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-name-pubsub-cancel"}},[t._v("#")]),t._v(" /api/v0/name/pubsub/cancel")]),t._v(" "),a("p",[t._v("Cancel a name subscription.")]),t._v(" "),a("h3",{attrs:{id:"arguments-81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-81"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Name to cancel the subscription for. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-80"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Canceled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-80"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsub/cancel?arg=<name>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-name-pubsub-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-name-pubsub-state"}},[t._v("#")]),t._v(" /api/v0/name/pubsub/state")]),t._v(" "),a("p",[t._v("Query the state of IPNS pubsub.")]),t._v(" "),a("h3",{attrs:{id:"arguments-82"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-82"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("p",[t._v("This endpoint takes no arguments.")]),t._v(" "),a("h3",{attrs:{id:"response-81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-81"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<bool>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-81"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsub/state"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-name-pubsub-subs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-name-pubsub-subs"}},[t._v("#")]),t._v(" /api/v0/name/pubsub/subs")]),t._v(" "),a("p",[t._v("Show current name subscriptions.")]),t._v(" "),a("h3",{attrs:{id:"arguments-83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-83"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ipns-base")]),t._v(" [string]: Encoding used for keys: Can either be a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: "),a("code",[t._v("base36")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-82"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-82"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Strings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-82"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-82"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsub/subs?ipns-base=base36"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-name-resolve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-name-resolve"}},[t._v("#")]),t._v(" /api/v0/name/resolve")]),t._v(" "),a("p",[t._v("Resolve IPNS names.")]),t._v(" "),a("h3",{attrs:{id:"arguments-84"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-84"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The IPNS name to resolve. Defaults to your node's peerID. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("recursive")]),t._v(" [bool]: Resolve until the result is not an IPNS name. Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("nocache")]),t._v(" [bool]: Do not use cached entries. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("dht-record-count")]),t._v(" [uint]: Number of records to request for DHT resolution. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("dht-timeout")]),t._v(' [string]: Max time to collect values during DHT resolution eg "30s". Pass 0 for no timeout. Required: no.')]),t._v(" "),a("li",[a("code",[t._v("stream")]),t._v(" [bool]: Stream entries as they are found. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-83"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-83"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/name/resolve?arg=<name>&recursive=true&nocache=<value>&dht-record-count=<value>&dht-timeout=<value>&stream=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-data"}},[t._v("#")]),t._v(" /api/v0/object/data")]),t._v(" "),a("p",[t._v("Deprecated way to read the raw bytes of a dag-pb object: use 'dag get' instead.")]),t._v(" "),a("h3",{attrs:{id:"arguments-85"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-85"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Key of the object to retrieve, in base58-encoded multihash format. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-84"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-84"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-84"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-84"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/data?arg=<key>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-diff"}},[t._v("#")]),t._v(" /api/v0/object/diff")]),t._v(" "),a("p",[t._v("Display the diff between two IPFS objects.")]),t._v(" "),a("h3",{attrs:{id:"arguments-86"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-86"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Object to diff against. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Object to diff. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("verbose")]),t._v(" [bool]: Print extra information. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-85"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-85"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Changes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"After"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Before"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<cid-string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-85"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-85"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/diff?arg=<obj_a>&arg=<obj_b>&verbose=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-get"}},[t._v("#")]),t._v(" /api/v0/object/get")]),t._v(" "),a("p",[t._v("Deprecated way to get and serialize the dag-pb node. Use 'dag get' instead")]),t._v(" "),a("h3",{attrs:{id:"arguments-87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-87"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Key of the dag-pb object to retrieve, in base58-encoded multihash format. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("data-encoding")]),t._v(' [string]: Encoding type of the data field, either "text" or "base64". Default: '),a("code",[t._v("text")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-86"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-86"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-86"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-86"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/get?arg=<key>&data-encoding=text"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-links"}},[t._v("#")]),t._v(" /api/v0/object/links")]),t._v(" "),a("p",[t._v("Deprecated way to output links in the specified dag-pb object: use 'dag get' instead.")]),t._v(" "),a("h3",{attrs:{id:"arguments-88"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-88"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Key of the dag-pb object to retrieve, in base58-encoded multihash format. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("headers")]),t._v(" [bool]: Print table headers (Hash, Size, Name). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-87"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-87"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/links?arg=<key>&headers=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-new"}},[t._v("#")]),t._v(" /api/v0/object/new")]),t._v(" "),a("p",[t._v("Deprecated way to create a new dag-pb object from a template.")]),t._v(" "),a("h3",{attrs:{id:"arguments-89"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-89"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Template to use. Optional. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-88"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-88"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-88"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-88"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/new?arg=<template>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-patch-add-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-patch-add-link"}},[t._v("#")]),t._v(" /api/v0/object/patch/add-link")]),t._v(" "),a("p",[t._v("Deprecated way to add a link to a given dag-pb.")]),t._v(" "),a("h3",{attrs:{id:"arguments-90"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-90"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The hash of the node to modify. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Name of link to create. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: IPFS object to add link to. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("create")]),t._v(" [bool]: Create intermediary nodes. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-89"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-89"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-89"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-89"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/patch/add-link?arg=<root>&arg=<name>&arg=<ref>&create=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-patch-append-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-patch-append-data"}},[t._v("#")]),t._v(" /api/v0/object/patch/append-data")]),t._v(" "),a("p",[t._v("Deprecated way to append data to the data segment of a DAG node.")]),t._v(" "),a("h3",{attrs:{id:"arguments-91"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-91"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The hash of the node to modify. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"request-body-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-12"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-90"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-90"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-90"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-90"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/object/patch/append-data?arg=<root>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-patch-rm-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-patch-rm-link"}},[t._v("#")]),t._v(" /api/v0/object/patch/rm-link")]),t._v(" "),a("p",[t._v("Deprecated way to remove a link from dag-pb object.")]),t._v(" "),a("h3",{attrs:{id:"arguments-92"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-92"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The hash of the node to modify. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Name of the link to remove. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"response-91"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-91"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-91"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-91"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/patch/rm-link?arg=<root>&arg=<name>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-patch-set-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-patch-set-data"}},[t._v("#")]),t._v(" /api/v0/object/patch/set-data")]),t._v(" "),a("p",[t._v("Deprecated way to set the data field of dag-pb object.")]),t._v(" "),a("h3",{attrs:{id:"arguments-93"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-93"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: The hash of the node to modify. Required: "),a("strong",[t._v("yes")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"request-body-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-13"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-92"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-92"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-92"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-92"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/object/patch/set-data?arg=<root>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-put"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-put"}},[t._v("#")]),t._v(" /api/v0/object/put")]),t._v(" "),a("p",[t._v("Deprecated way to store input as a DAG object. Use 'dag put' instead.")]),t._v(" "),a("h3",{attrs:{id:"arguments-94"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-94"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("inputenc")]),t._v(' [string]: Encoding type of input data. One of: {"protobuf", "json"}. Default: '),a("code",[t._v("json")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("datafieldenc")]),t._v(' [string]: Encoding type of the data field, either "text" or "base64". Default: '),a("code",[t._v("text")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("pin")]),t._v(" [bool]: Pin this object when adding. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("quiet")]),t._v(" [bool]: Write minimal output. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"request-body-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body-14"}},[t._v("#")]),t._v(" Request Body")]),t._v(" "),a("p",[t._v("Argument "),a("code",[t._v("data")]),t._v(" is of file type. This endpoint expects one or several files (depending on the command) in the body of the request as 'multipart/form-data'.")]),t._v(" "),a("h3",{attrs:{id:"response-93"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-93"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Links"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<uint64>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-93"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-93"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST -F file=@myfile "http://127.0.0.1:5001/api/v0/object/put?inputenc=json&datafieldenc=text&pin=<value>&quiet=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-object-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-object-stat"}},[t._v("#")]),t._v(" /api/v0/object/stat")]),t._v(" "),a("p",[t._v("Deprecated way to read stats for the dag-pb node. Use 'files stat' instead.")]),t._v(" "),a("h3",{attrs:{id:"arguments-95"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-95"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Key of the object to retrieve, in base58-encoded multihash format. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("human")]),t._v(" [bool]: Print sizes in human readable format (e.g., 1K 234M 2G). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-94"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-94"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"BlockSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CumulativeSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"DataSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"LinksSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"NumLinks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-94"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-94"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/object/stat?arg=<key>&human=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-close"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-close"}},[t._v("#")]),t._v(" /api/v0/p2p/close")]),t._v(" "),a("p",[t._v("Stop listening for new connections to forward.")]),t._v(" "),a("h3",{attrs:{id:"arguments-96"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-96"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("all")]),t._v(" [bool]: Close all listeners. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("protocol")]),t._v(" [string]: Match protocol name. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("listen-address")]),t._v(" [string]: Match listen address. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("target-address")]),t._v(" [string]: Match target address. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-95"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-95"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-95"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-95"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/close?all=<value>&protocol=<value>&listen-address=<value>&target-address=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-forward"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-forward"}},[t._v("#")]),t._v(" /api/v0/p2p/forward")]),t._v(" "),a("p",[t._v("Forward connections to libp2p service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-97"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-97"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Protocol name. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Listening endpoint. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Target endpoint. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("allow-custom-protocol")]),t._v(" [bool]: Don't require /x/ prefix. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-96"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-96"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-96"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-96"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/forward?arg=<protocol>&arg=<listen-address>&arg=<target-address>&allow-custom-protocol=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-listen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-listen"}},[t._v("#")]),t._v(" /api/v0/p2p/listen")]),t._v(" "),a("p",[t._v("Create libp2p service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-98"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-98"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Protocol name. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Target endpoint. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("allow-custom-protocol")]),t._v(" [bool]: Don't require /x/ prefix. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("report-peer-id")]),t._v(" [bool]: Send remote base58 peerid to target when a new connection is established. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-97"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-97"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-97"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-97"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/listen?arg=<protocol>&arg=<target-address>&allow-custom-protocol=<value>&report-peer-id=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-ls"}},[t._v("#")]),t._v(" /api/v0/p2p/ls")]),t._v(" "),a("p",[t._v("List active p2p listeners.")]),t._v(" "),a("h3",{attrs:{id:"arguments-99"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-99"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("headers")]),t._v(" [bool]: Print table headers (Protocol, Listen, Target). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-98"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-98"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Listeners"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ListenAddress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Protocol"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"TargetAddress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-98"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-98"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/ls?headers=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-stream-close"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-stream-close"}},[t._v("#")]),t._v(" /api/v0/p2p/stream/close")]),t._v(" "),a("p",[t._v("Close active p2p stream.")]),t._v(" "),a("h3",{attrs:{id:"arguments-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-100"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Stream identifier Required: no.")]),t._v(" "),a("li",[a("code",[t._v("all")]),t._v(" [bool]: Close all streams. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-99"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-99"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-99"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-99"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/stream/close?arg=<id>&all=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-p2p-stream-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-p2p-stream-ls"}},[t._v("#")]),t._v(" /api/v0/p2p/stream/ls")]),t._v(" "),a("p",[t._v("List active p2p streams.")]),t._v(" "),a("h3",{attrs:{id:"arguments-101"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-101"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("headers")]),t._v(" [bool]: Print table headers (ID, Protocol, Local, Remote). Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-100"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Streams"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"HandlerID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OriginAddress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Protocol"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"TargetAddress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-100"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/p2p/stream/ls?headers=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-add"}},[t._v("#")]),t._v(" /api/v0/pin/add")]),t._v(" "),a("p",[t._v("Pin objects to local storage.")]),t._v(" "),a("h3",{attrs:{id:"arguments-102"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-102"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to object(s) to be pinned. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("recursive")]),t._v(" [bool]: Recursively pin the object linked to by the specified object(s). Default: "),a("code",[t._v("true")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("progress")]),t._v(" [bool]: Show progress. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-101"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-101"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Pins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Progress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<int>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-101"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-101"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/pin/add?arg=<ipfs-path>&recursive=true&progress=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-ls"}},[t._v("#")]),t._v(" /api/v0/pin/ls")]),t._v(" "),a("p",[t._v("List objects pinned to local storage.")]),t._v(" "),a("h3",{attrs:{id:"arguments-103"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-103"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to object(s) to be listed. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("type")]),t._v(' [string]: The type of pinned keys to list. Can be "direct", "indirect", "recursive", or "all". Default: '),a("code",[t._v("all")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("quiet")]),t._v(" [bool]: Write just hashes of objects. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("stream")]),t._v(" [bool]: Enable streaming of pins as they are discovered. Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-102"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-102"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PinLsList"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Keys"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PinLsObject"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-102"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-102"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/pin/ls?arg=<ipfs-path>&type=all&quiet=<value>&stream=<value>"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-remote-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-remote-add"}},[t._v("#")]),t._v(" /api/v0/pin/remote/add")]),t._v(" "),a("p",[t._v("Pin object to remote pinning service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-104"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-104"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Path to object(s) to be pinned. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("service")]),t._v(" [string]: Name of the remote pinning service to use (mandatory). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(" [string]: An optional name for the pin. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("background")]),t._v(" [bool]: Add to the queue on the remote service and return immediately (does not wait for pinned status). Default: "),a("code",[t._v("false")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-103"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-103"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-103"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-103"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote/add?arg=<ipfs-path>&service=<value>&name=<value>&background=false"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-remote-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-remote-ls"}},[t._v("#")]),t._v(" /api/v0/pin/remote/ls")]),t._v(" "),a("p",[t._v("List objects pinned to remote pinning service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-105"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-105"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("service")]),t._v(" [string]: Name of the remote pinning service to use (mandatory). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(" [string]: Return pins with names that contain the value provided (case-sensitive, exact match). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cid")]),t._v(" [array]: Return pins for the specified CIDs (comma-separated). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("status")]),t._v(" [array]: Return pins with the specified statuses (queued,pinning,pinned,failed). Default: "),a("code",[t._v("[pinned]")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-104"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-104"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Cid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<string>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"curl-example-104"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-104"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote/ls?service=<value>&name=<value>&cid=<value>&status=[pinned]"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-remote-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-remote-rm"}},[t._v("#")]),t._v(" /api/v0/pin/remote/rm")]),t._v(" "),a("p",[t._v("Remove pins from remote pinning service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-106"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-106"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("service")]),t._v(" [string]: Name of the remote pinning service to use (mandatory). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(" [string]: Remove pins with names that contain provided value (case-sensitive, exact match). Required: no.")]),t._v(" "),a("li",[a("code",[t._v("cid")]),t._v(" [array]: Remove pins for the specified CIDs. Required: no.")]),t._v(" "),a("li",[a("code",[t._v("status")]),t._v(" [array]: Remove pins with the specified statuses (queued,pinning,pinned,failed). Default: "),a("code",[t._v("[pinned]")]),t._v(". Required: no.")]),t._v(" "),a("li",[a("code",[t._v("force")]),t._v(" [bool]: Allow removal of multiple pins matching the query without additional confirmation. Default: "),a("code",[t._v("false")]),t._v(". Required: no.")])]),t._v(" "),a("h3",{attrs:{id:"response-105"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-105"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("On success, the call to this endpoint will return with 200 and the following body:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("This endpoint returns a `text/plain` response body.\n")])])]),a("h3",{attrs:{id:"curl-example-105"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#curl-example-105"}},[t._v("#")]),t._v(" cURL Example")]),t._v(" "),a("p",[a("code",[t._v('curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote/rm?service=<value>&name=<value>&cid=<value>&status=[pinned]&force=false"')])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"api-v0-pin-remote-service-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-v0-pin-remote-service-add"}},[t._v("#")]),t._v(" /api/v0/pin/remote/service/add")]),t._v(" "),a("p",[t._v("Add remote pinning service.")]),t._v(" "),a("h3",{attrs:{id:"arguments-107"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-107"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("arg")]),t._v(" [string]: Service name. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v(" [string]: Service endpoint. Required: "),a("strong",[t._v("yes")]),t._v(".")]),t._v(" €€