
å³Û³(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{594:function(e,t,a){"use strict";a.r(t);var s=a(24),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"configure-a-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-a-node"}},[e._v("#")]),e._v(" Configure a node")]),e._v(" "),a("p",[e._v("IPFS is configured through a json formatted text file, located by default at "),a("code",[e._v("~/.ipfs/config")]),e._v(". Implementation-specific information can be found within the "),a("a",{attrs:{href:"https://github.com/ipfs/go-ipfs/blob/master/docs/config.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("go-ipfs"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/blob/master/docs/CONFIG.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("js-ipfs"),a("OutboundLink")],1),e._v(" repositories. It is read once at node instantiation, either for an offline command, or when starting the daemon. Commands that execute on a running daemon do not read the config file at runtime.")]),e._v(" "),a("h1",{attrs:{id:"profiles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#profiles"}},[e._v("#")]),e._v(" Profiles")]),e._v(" "),a("p",[e._v("Configuring profiles allows you to tweak configuration quickly. You can apply profiles with the "),a("code",[e._v("--profile")]),e._v(" flag to "),a("code",[e._v("ipfs init")]),e._v(" or with the "),a("code",[e._v("ipfs config profile apply")]),e._v(" command. When a profile is applied, a backup of the configuration file will be created in "),a("code",[e._v("$IPFS_PATH")]),e._v(".")]),e._v(" "),a("p",[e._v("For a list of all the available profiles and other details, see "),a("RouterLink",{attrs:{to:"/how-to/default-profile/#configure-a-profile-and-switch-between-profiles"}},[e._v("Configure a profile")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[e._v("#")]),e._v(" Types")]),e._v(" "),a("p",[e._v("This document refers to the standard JSON types (e.g., "),a("code",[e._v("null")]),e._v(", "),a("code",[e._v("string")]),e._v(","),a("br"),e._v(" "),a("code",[e._v("number")]),e._v(", etc.), as well as a few custom types, described below.")]),e._v(" "),a("h3",{attrs:{id:"flag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[e._v("#")]),e._v(" "),a("code",[e._v("flag")])]),e._v(" "),a("p",[e._v("Flags allow enabling and disabling features. However, unlike simple booleans,"),a("br"),e._v("\nthey can also be "),a("code",[e._v("null")]),e._v(" (or omitted) to indicate that the default value should"),a("br"),e._v("\nbe chosen. This makes it easier for go-ipfs to change the defaults in the"),a("br"),e._v("\nfuture, unless the user "),a("em",[e._v("explicitly")]),e._v(" sets the flag to either "),a("code",[e._v("true")]),e._v(" (enabled) or"),a("br"),e._v(" "),a("code",[e._v("false")]),e._v(" (disabled). Flags have three possible states:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("null")]),e._v(" or missing (apply the default value).")]),e._v(" "),a("li",[a("code",[e._v("true")]),e._v(" (enabled)")]),e._v(" "),a("li",[a("code",[e._v("false")]),e._v(" (disabled)")])]),e._v(" "),a("h3",{attrs:{id:"priority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#priority"}},[e._v("#")]),e._v(" "),a("code",[e._v("priority")])]),e._v(" "),a("p",[e._v("Priorities allow specifying the priority of a feature/protocol and disabling the"),a("br"),e._v("\nfeature/protocol. Priorities can take one of the following values:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("null")]),e._v("/missing (apply the default priority, same as with flags)")]),e._v(" "),a("li",[a("code",[e._v("false")]),e._v(" (disabled)")]),e._v(" "),a("li",[a("code",[e._v("1 - 2^63")]),e._v(" (priority, lower is preferred)")])]),e._v(" "),a("h3",{attrs:{id:"strings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[e._v("#")]),e._v(" "),a("code",[e._v("strings")])]),e._v(" "),a("p",[e._v("Strings is a special type for conveniently specifying a single string, an array"),a("br"),e._v("\nof strings, or null:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("null")])]),e._v(" "),a("li",[a("code",[e._v('"a single string"')])]),e._v(" "),a("li",[a("code",[e._v('["an", "array", "of", "strings"]')])])]),e._v(" "),a("h3",{attrs:{id:"duration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#duration"}},[e._v("#")]),e._v(" "),a("code",[e._v("duration")])]),e._v(" "),a("p",[e._v("Duration is a type for describing lengths of time, using the same format "),a("a",{attrs:{href:"https://pkg.go.dev/time#Duration.String",target:"_blank",rel:"noopener noreferrer"}},[e._v("go"),a("OutboundLink")],1),e._v(" does (e.g, "),a("code",[e._v('"1d2h4m40.01s"')]),e._v(").")]),e._v(" "),a("h2",{attrs:{id:"addresses"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses")])]),e._v(" "),a("p",[e._v("Contains information about various listener addresses to be used by this node.")]),e._v(" "),a("h3",{attrs:{id:"addresses-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses-api"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses.API")])]),e._v(" "),a("p",[e._v("Multiaddr or array of multiaddrs describing the address to serve the local HTTP"),a("br"),e._v("\nAPI on.")]),e._v(" "),a("p",[e._v("Supported Transports:")]),e._v(" "),a("ul",[a("li",[e._v("tcp/ip{4,6} - "),a("code",[e._v("/ipN/.../tcp/...")])]),e._v(" "),a("li",[e._v("unix - "),a("code",[e._v("/unix/path/to/socket")])])]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("/ip4/127.0.0.1/tcp/5001")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("strings")]),e._v(" (multiaddrs)")]),e._v(" "),a("h3",{attrs:{id:"addresses-gateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses-gateway"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses.Gateway")])]),e._v(" "),a("p",[e._v("Multiaddr or array of multiaddrs describing the address to serve the local"),a("br"),e._v("\ngateway on.")]),e._v(" "),a("p",[e._v("Supported Transports:")]),e._v(" "),a("ul",[a("li",[e._v("tcp/ip{4,6} - "),a("code",[e._v("/ipN/.../tcp/...")])]),e._v(" "),a("li",[e._v("unix - "),a("code",[e._v("/unix/path/to/socket")])])]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("/ip4/127.0.0.1/tcp/8080")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("strings")]),e._v(" (multiaddrs)")]),e._v(" "),a("h3",{attrs:{id:"addresses-swarm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses-swarm"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses.Swarm")])]),e._v(" "),a("p",[e._v("Array of multiaddrs describing which addresses to listen on for p2p swarm"),a("br"),e._v("\nconnections.")]),e._v(" "),a("p",[e._v("Supported Transports:")]),e._v(" "),a("ul",[a("li",[e._v("tcp/ip{4,6} - "),a("code",[e._v("/ipN/.../tcp/...")])]),e._v(" "),a("li",[e._v("websocket - "),a("code",[e._v("/ipN/.../tcp/.../ws")])]),e._v(" "),a("li",[e._v("quic - "),a("code",[e._v("/ipN/.../udp/.../quic")])])]),e._v(" "),a("p",[e._v("Default:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip4/0.0.0.0/tcp/4001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip6/::/tcp/4001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip4/0.0.0.0/udp/4001/quic"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip6/::/udp/4001/quic"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),a("p",[e._v("Type: "),a("code",[e._v("array[string]")]),e._v(" (multiaddrs)")]),e._v(" "),a("h3",{attrs:{id:"addresses-announce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses-announce"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses.Announce")])]),e._v(" "),a("p",[e._v("If non-empty, this array specifies the swarm addresses to announce to the"),a("br"),e._v("\nnetwork. If empty, the daemon will announce inferred swarm addresses.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("[]")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")]),e._v(" (multiaddrs)")]),e._v(" "),a("h3",{attrs:{id:"addresses-noannounce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addresses-noannounce"}},[e._v("#")]),e._v(" "),a("code",[e._v("Addresses.NoAnnounce")])]),e._v(" "),a("p",[e._v("Array of swarm addresses not to announce to the network.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("[]")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")]),e._v(" (multiaddrs)")]),e._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" "),a("code",[e._v("API")])]),e._v(" "),a("p",[e._v("Contains information used by the API gateway.")]),e._v(" "),a("h3",{attrs:{id:"api-httpheaders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-httpheaders"}},[e._v("#")]),e._v(" "),a("code",[e._v("API.HTTPHeaders")])]),e._v(" "),a("p",[e._v("Map of HTTP headers to set on responses from the API HTTP server.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Foo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Default: "),a("code",[e._v("null")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("object[string -> array[string]]")]),e._v(" (header names -> array of header values)")]),e._v(" "),a("h2",{attrs:{id:"autonat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT")])]),e._v(" "),a("p",[e._v("Contains the configuration options for the AutoNAT service. The AutoNAT service"),a("br"),e._v("\nhelps other nodes on the network determine if they're publicly reachable from"),a("br"),e._v("\nthe rest of the internet.")]),e._v(" "),a("h3",{attrs:{id:"autonat-servicemode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat-servicemode"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT.ServiceMode")])]),e._v(" "),a("p",[e._v("When unset (default), the AutoNAT service defaults to "),a("em",[e._v("enabled")]),e._v(". Otherwise, this"),a("br"),e._v("\nfield can take one of two values:")]),e._v(" "),a("ul",[a("li",[e._v('"enabled" - Enable the service (unless the node determines that it, itself,'),a("br"),e._v("\nisn't reachable by the public internet).")]),e._v(" "),a("li",[e._v('"disabled" - Disable the service.')])]),e._v(" "),a("p",[e._v("Additional modes may be added in the future.")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (one of "),a("code",[e._v('"enabled"')]),e._v(" or "),a("code",[e._v('"disabled"')]),e._v(")")]),e._v(" "),a("h3",{attrs:{id:"autonat-throttle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat-throttle"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT.Throttle")])]),e._v(" "),a("p",[e._v("When set, this option configures the AutoNAT services throttling behavior. By"),a("br"),e._v("\ndefault, go-ipfs will rate-limit the number of NAT checks performed for other"),a("br"),e._v("\nnodes to 30 per minute, and 3 per peer.")]),e._v(" "),a("h3",{attrs:{id:"autonat-throttle-globallimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat-throttle-globallimit"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT.Throttle.GlobalLimit")])]),e._v(" "),a("p",[e._v("Configures how many AutoNAT requests to service per "),a("code",[e._v("AutoNAT.Throttle.Interval")]),e._v(".")]),e._v(" "),a("p",[e._v("Default: 30")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (non-negative, "),a("code",[e._v("0")]),e._v(" means unlimited)")]),e._v(" "),a("h3",{attrs:{id:"autonat-throttle-peerlimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat-throttle-peerlimit"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT.Throttle.PeerLimit")])]),e._v(" "),a("p",[e._v("Configures how many AutoNAT requests per-peer to service per "),a("code",[e._v("AutoNAT.Throttle.Interval")]),e._v(".")]),e._v(" "),a("p",[e._v("Default: 3")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (non-negative, "),a("code",[e._v("0")]),e._v(" means unlimited)")]),e._v(" "),a("h3",{attrs:{id:"autonat-throttle-interval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autonat-throttle-interval"}},[e._v("#")]),e._v(" "),a("code",[e._v("AutoNAT.Throttle.Interval")])]),e._v(" "),a("p",[e._v("Configures the interval for the above limits.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("1m0s")]),e._v(" (1 Minute)")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("duration")]),e._v(" (when set to "),a("code",[e._v("0")]),e._v(" or unset, the default value is used)")]),e._v(" "),a("h2",{attrs:{id:"bootstrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap"}},[e._v("#")]),e._v(" "),a("code",[e._v("Bootstrap")])]),e._v(" "),a("p",[e._v("Bootstrap is an array of multiaddrs of trusted nodes to connect to in order to"),a("br"),e._v("\ninitiate a connection to the network.")]),e._v(" "),a("p",[e._v("Default: The ipfs.io bootstrap nodes")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")]),e._v(" (multiaddrs)")]),e._v(" "),a("h2",{attrs:{id:"datastore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore")])]),e._v(" "),a("p",[e._v("Contains information related to the construction and operation of the on-disk"),a("br"),e._v("\nstorage system.")]),e._v(" "),a("h3",{attrs:{id:"datastore-storagemax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-storagemax"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.StorageMax")])]),e._v(" "),a("p",[e._v("A soft upper limit for the size of the ipfs repository's datastore. With "),a("code",[e._v("StorageGCWatermark")]),e._v(","),a("br"),e._v("\nis used to calculate whether to trigger a gc run (only if "),a("code",[e._v("--enable-gc")]),e._v(" flag is set).")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v('"10GB"')])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (size)")]),e._v(" "),a("h3",{attrs:{id:"datastore-storagegcwatermark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-storagegcwatermark"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.StorageGCWatermark")])]),e._v(" "),a("p",[e._v("The percentage of the "),a("code",[e._v("StorageMax")]),e._v(" value at which a garbage collection will be"),a("br"),e._v("\ntriggered automatically if the daemon was run with automatic gc enabled (that"),a("br"),e._v("\noption defaults to false currently).")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("90")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (0-100%)")]),e._v(" "),a("h3",{attrs:{id:"datastore-gcperiod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-gcperiod"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.GCPeriod")])]),e._v(" "),a("p",[e._v("A time duration specifying how frequently to run a garbage collection. Only used"),a("br"),e._v("\nif automatic gc is enabled.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("1h")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("duration")]),e._v(" (an empty string means the default value)")]),e._v(" "),a("h3",{attrs:{id:"datastore-hashonread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-hashonread"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.HashOnRead")])]),e._v(" "),a("p",[e._v("A boolean value. If set to true, all block reads from disk will be hashed and"),a("br"),e._v("\nverified. This will cause increased CPU utilization.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"datastore-bloomfiltersize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-bloomfiltersize"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.BloomFilterSize")])]),e._v(" "),a("p",[e._v("A number representing the size in bytes of the blockstore's "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Bloom_filter",target:"_blank",rel:"noopener noreferrer"}},[e._v("bloom"),a("br"),e._v("\nfilter"),a("OutboundLink")],1),e._v(". A value of zero represents"),a("br"),e._v("\nthe feature being disabled.")]),e._v(" "),a("p",[e._v("This site generates useful graphs for various bloom filter values:"),a("br"),e._v(" "),a("a",{attrs:{href:"https://hur.st/bloomfilter/?n=1e6&p=0.01&m=&k=7",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://hur.st/bloomfilter/?n=1e6&p=0.01&m=&k=7"),a("OutboundLink")],1),e._v(" You may use it to find a"),a("br"),e._v("\npreferred optimal value, where "),a("code",[e._v("m")]),e._v(" is "),a("code",[e._v("BloomFilterSize")]),e._v(" in bits. Remember to"),a("br"),e._v("\nconvert the value "),a("code",[e._v("m")]),e._v(" from bits, into bytes for use as "),a("code",[e._v("BloomFilterSize")]),e._v(" in the"),a("br"),e._v("\nconfig file. For example, for 1,000,000 blocks, expecting a 1% false positive"),a("br"),e._v("\nrate, you'd end up with a filter size of 9592955 bits, so for "),a("code",[e._v("BloomFilterSize")]),a("br"),e._v("\nwe'd want to use 1199120 bytes. As of writing, "),a("a",{attrs:{href:"https://github.com/ipfs/go-ipfs-blockstore/blob/547442836ade055cc114b562a3cc193d4e57c884/caching.go#L22",target:"_blank",rel:"noopener noreferrer"}},[e._v("7 hash"),a("br"),e._v("\nfunctions"),a("OutboundLink")],1),a("br"),e._v("\nare used, so the constant "),a("code",[e._v("k")]),e._v(" is 7 in the formula.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("0")]),e._v(" (disabled)")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (non-negative, bytes)")]),e._v(" "),a("h3",{attrs:{id:"datastore-spec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastore-spec"}},[e._v("#")]),e._v(" "),a("code",[e._v("Datastore.Spec")])]),e._v(" "),a("p",[e._v("Spec defines the structure of the ipfs datastore. It is a composable structure,"),a("br"),e._v("\nwhere each datastore is represented by a json object. Datastores can wrap other"),a("br"),e._v("\ndatastores to provide extra functionality (eg metrics, logging, or caching).")]),e._v(" "),a("p",[e._v("This can be changed manually, however, if you make any changes that require a"),a("br"),e._v("\ndifferent on-disk structure, you will need to run the "),a("a",{attrs:{href:"https://github.com/ipfs/ipfs-ds-convert",target:"_blank",rel:"noopener noreferrer"}},[e._v("ipfs-ds-convert"),a("br"),e._v("\ntool"),a("OutboundLink")],1),e._v(" to migrate data into the new"),a("br"),e._v("\nstructures.")]),e._v(" "),a("p",[e._v("Default:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "mounts": [\n\t{\n\t  "child": {\n\t\t"path": "blocks",\n\t\t"shardFunc": "/repo/flatfs/shard/v1/next-to-last/2",\n\t\t"sync": true,\n\t\t"type": "flatfs"\n\t  },\n\t  "mountpoint": "/blocks",\n\t  "prefix": "flatfs.datastore",\n\t  "type": "measure"\n\t},\n\t{\n\t  "child": {\n\t\t"compression": "none",\n\t\t"path": "datastore",\n\t\t"type": "levelds"\n\t  },\n\t  "mountpoint": "/",\n\t  "prefix": "leveldb.datastore",\n\t  "type": "measure"\n\t}\n  ],\n  "type": "mount"\n}\n')])])]),a("p",[e._v("Type: "),a("code",[e._v("object")])]),e._v(" "),a("h2",{attrs:{id:"discovery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery"}},[e._v("#")]),e._v(" "),a("code",[e._v("Discovery")])]),e._v(" "),a("p",[e._v("Contains options for configuring ipfs node discovery mechanisms.")]),e._v(" "),a("h3",{attrs:{id:"discovery-mdns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery-mdns"}},[e._v("#")]),e._v(" "),a("code",[e._v("Discovery.MDNS")])]),e._v(" "),a("p",[e._v("Options for multicast dns peer discovery.")]),e._v(" "),a("h4",{attrs:{id:"discovery-mdns-enabled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery-mdns-enabled"}},[e._v("#")]),e._v(" "),a("code",[e._v("Discovery.MDNS.Enabled")])]),e._v(" "),a("p",[e._v("A boolean value for whether or not mdns should be active.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("true")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h4",{attrs:{id:"discovery-mdns-interval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery-mdns-interval"}},[e._v("#")]),e._v(" "),a("code",[e._v("Discovery.MDNS.Interval")])]),e._v(" "),a("p",[e._v("A number of seconds to wait between discovery checks.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("5")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (integer seconds, 0 means the default)")]),e._v(" "),a("h2",{attrs:{id:"gateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway")])]),e._v(" "),a("p",[e._v("Options for the HTTP gateway.")]),e._v(" "),a("h3",{attrs:{id:"gateway-nofetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-nofetch"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.NoFetch")])]),e._v(" "),a("p",[e._v("When set to true, the gateway will only serve content already in the local repo"),a("br"),e._v("\nand will not fetch files from the network.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"gateway-nodnslink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-nodnslink"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.NoDNSLink")])]),e._v(" "),a("p",[e._v("A boolean to configure whether DNSLink lookup for value in "),a("code",[e._v("Host")]),e._v(" HTTP header"),a("br"),e._v("\nshould be performed. If DNSLink is present, content path stored in the DNS TXT"),a("br"),e._v("\nrecord becomes the "),a("code",[e._v("/")]),e._v(" and respective payload is returned to the client.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"gateway-httpheaders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-httpheaders"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.HTTPHeaders")])]),e._v(" "),a("p",[e._v("Headers to set on gateway responses.")]),e._v(" "),a("p",[e._v("Default:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-Requested-With"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Access-Control-Allow-Methods"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Type: "),a("code",[e._v("object[string -> array[string]]")])]),e._v(" "),a("h3",{attrs:{id:"gateway-rootredirect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-rootredirect"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.RootRedirect")])]),e._v(" "),a("p",[e._v("A url to redirect requests for "),a("code",[e._v("/")]),e._v(" to.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v('""')])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (url)")]),e._v(" "),a("h3",{attrs:{id:"gateway-writable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-writable"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.Writable")])]),e._v(" "),a("p",[e._v("A boolean to configure whether the gateway is writeable or not.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"gateway-pathprefixes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-pathprefixes"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.PathPrefixes")])]),e._v(" "),a("p",[e._v("Array of acceptable url paths that a client can specify in X-Ipfs-Path-Prefix"),a("br"),e._v("\nheader.")]),e._v(" "),a("p",[e._v("The X-Ipfs-Path-Prefix header is used to specify a base path to prepend to links"),a("br"),e._v("\nin directory listings and for trailing-slash redirects. It is intended to be set"),a("br"),e._v("\nby a frontend http proxy like nginx.")]),e._v(" "),a("p",[e._v("Example: We mount "),a("code",[e._v("blog.ipfs.io")]),e._v(" (a dnslink page) at "),a("code",[e._v("ipfs.io/blog")]),e._v(".")]),e._v(" "),a("p",[a("strong",[e._v(".ipfs/config")])]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Gateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"PathPrefixes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/blog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[a("strong",[e._v("nginx_ipfs.conf")])]),e._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("location")]),e._v(" /blog/")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("rewrite")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"^/blog(/.*)$"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v(" break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("proxy_set_header")]),e._v(" Host blog.ipfs.io")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("proxy_set_header")]),e._v(" X-Ipfs-Gateway-Prefix /blog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("proxy_pass")]),e._v(" http://127.0.0.1:8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Default: "),a("code",[e._v("[]")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")])]),e._v(" "),a("h3",{attrs:{id:"gateway-publicgateways"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-publicgateways"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.PublicGateways")])]),e._v(" "),a("p",[a("code",[e._v("PublicGateways")]),e._v(" is a dictionary for defining gateway behavior on specified hostnames.")]),e._v(" "),a("p",[e._v("Hostnames can optionally be defined with one or more wildcards.")]),e._v(" "),a("p",[e._v("Examples:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("*.example.com")]),e._v(" will match requests to "),a("code",[e._v("http://foo.example.com/ipfs/*")]),e._v(" or "),a("code",[e._v("http://{cid}.ipfs.bar.example.com/*")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("foo-*.example.com")]),e._v(" will match requests to "),a("code",[e._v("http://foo-bar.example.com/ipfs/*")]),e._v(" or "),a("code",[e._v("http://{cid}.ipfs.foo-xyz.example.com/*")]),e._v(".")])]),e._v(" "),a("h4",{attrs:{id:"gateway-publicgateways-paths"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-publicgateways-paths"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.PublicGateways: Paths")])]),e._v(" "),a("p",[e._v("Array of paths that should be exposed on the hostname.")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Gateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"PublicGateways"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"example.com"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ipfs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ipns"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Above enables "),a("code",[e._v("http://example.com/ipfs/*")]),e._v(" and "),a("code",[e._v("http://example.com/ipns/*")]),e._v(" but not "),a("code",[e._v("http://example.com/api/*")])]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("[]")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")])]),e._v(" "),a("h4",{attrs:{id:"gateway-publicgateways-usesubdomains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-publicgateways-usesubdomains"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.PublicGateways: UseSubdomains")])]),e._v(" "),a("p",[e._v("A boolean to configure whether the gateway at the hostname provides "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Origin isolation"),a("OutboundLink")],1),a("br"),e._v("\nbetween content roots.")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("true")]),e._v(" - enables "),a("RouterLink",{attrs:{to:"/how-to/address-ipfs-on-web/#subdomain-gateway"}},[e._v("subdomain gateway")]),e._v(" at "),a("code",[e._v("http://*.{hostname}/")])],1),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Requires whitelist:")]),e._v(" make sure respective "),a("code",[e._v("Paths")]),e._v(" are set."),a("br"),e._v("\nFor example, "),a("code",[e._v('Paths: ["/ipfs", "/ipns"]')]),e._v(" are required for "),a("code",[e._v("http://{cid}.ipfs.{hostname}")]),e._v(" and "),a("code",[e._v("http://{foo}.ipns.{hostname}")]),e._v(" to work:"),a("br"),e._v(" "),a("code",[e._v('json "Gateway": { "PublicGateways": { "dweb.link": { "UseSubdomains": true, "Paths": ["/ipfs", "/ipns"], } } }')])]),e._v(" "),a("li",[a("strong",[e._v("Backward-compatible:")]),e._v(" requests for content paths such as "),a("code",[e._v("http://{hostname}/ipfs/{cid}")]),e._v(" produce redirect to "),a("code",[e._v("http://{cid}.ipfs.{hostname}")])]),e._v(" "),a("li",[a("strong",[e._v("API:")]),e._v(" if "),a("code",[e._v("/api")]),e._v(" is on the "),a("code",[e._v("Paths")]),e._v(" whitelist, "),a("code",[e._v("http://{hostname}/api/{cmd}")]),e._v(" produces redirect to "),a("code",[e._v("http://api.{hostname}/api/{cmd}")])])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("false")]),e._v(" - enables "),a("RouterLink",{attrs:{to:"/how-to/address-ipfs-on-web/#path-gateway"}},[e._v("path gateway")]),e._v(" at "),a("code",[e._v("http://{hostname}/*")])],1),e._v(" "),a("ul",[a("li",[e._v("Example:"),a("br"),e._v(" "),a("code",[e._v('json "Gateway": { "PublicGateways": { "ipfs.io": { "UseSubdomains": false, "Paths": ["/ipfs", "/ipns", "/api"], } } }')]),a("br")])])])]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h4",{attrs:{id:"gateway-publicgateways-nodnslink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-publicgateways-nodnslink"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway.PublicGateways: NoDNSLink")])]),e._v(" "),a("p",[e._v("A boolean to configure whether DNSLink for hostname present in "),a("code",[e._v("Host")]),a("br"),e._v("\nHTTP header should be resolved. Overrides global setting."),a("br"),e._v("\nIf "),a("code",[e._v("Paths")]),e._v(" are defined, they take priority over DNSLink.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")]),e._v(" (DNSLink lookup enabled by default for every defined hostname)")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h4",{attrs:{id:"implicit-defaults-of-gateway-publicgateways"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implicit-defaults-of-gateway-publicgateways"}},[e._v("#")]),e._v(" Implicit defaults of "),a("code",[e._v("Gateway.PublicGateways")])]),e._v(" "),a("p",[e._v("Default entries for "),a("code",[e._v("localhost")]),e._v(" hostname and loopback IPs are always present."),a("br"),e._v("\nIf additional config is provided for those hostnames, it will be merged on top of implicit values:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Gateway"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"PublicGateways"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ipfs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ipns"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"UseSubdomains"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("It is also possible to remove a default by setting it to "),a("code",[e._v("null")]),e._v("."),a("br"),e._v("\nFor example, to disable subdomain gateway on "),a("code",[e._v("localhost")]),a("br"),e._v("\nand make that hostname act the same as "),a("code",[e._v("127.0.0.1")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ ipfs config --json Gateway.PublicGateways "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{\"localhost\": null }'")]),e._v("\n")])])]),a("h3",{attrs:{id:"gateway-recipes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-recipes"}},[e._v("#")]),e._v(" "),a("code",[e._v("Gateway")]),e._v(" recipes")]),e._v(" "),a("p",[e._v("Below is a list of the most common public gateway setups.")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Public "),a("RouterLink",{attrs:{to:"/how-to/address-ipfs-on-web/#subdomain-gateway"}},[e._v("subdomain gateway")]),e._v(" at "),a("code",[e._v("http://{cid}.ipfs.dweb.link")]),e._v(" (each content root gets its own Origin)")],1),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ ipfs config --json Gateway.PublicGateways "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{\n    "dweb.link": {\n      "UseSubdomains": true,\n      "Paths": ["/ipfs", "/ipns"]\n    }\n  }\'')]),e._v("\n")])])]),a("p",[a("strong",[e._v("Backward-compatible:")]),e._v(" this feature enables automatic redirects from content paths to subdomains:"),a("br"),e._v(" "),a("code",[e._v("http://dweb.link/ipfs/{cid}")]),e._v(" â "),a("code",[e._v("http://{cid}.ipfs.dweb.link")]),a("br"),e._v(" "),a("strong",[e._v("X-Forwarded-Proto:")]),e._v(" if you run go-ipfs behind a reverse proxy that provides TLS, make it add a "),a("code",[e._v("X-Forwarded-Proto: https")]),e._v(" HTTP header to ensure users are redirected to "),a("code",[e._v("https://")]),e._v(", not "),a("code",[e._v("http://")]),e._v(". It will also ensure DNSLink names are inlined to fit in a single DNS label, so they work fine with a wildcart TLS cert ("),a("a",{attrs:{href:"https://github.com/ipfs/in-web-browsers/issues/169",target:"_blank",rel:"noopener noreferrer"}},[e._v("details"),a("OutboundLink")],1),e._v("). The NGINX directive is "),a("code",[e._v('proxy_set_header X-Forwarded-Proto "https";')]),e._v(".:"),a("br"),e._v(" "),a("code",[e._v("http://dweb.link/ipfs/{cid}")]),e._v(" â "),a("code",[e._v("https://{cid}.ipfs.dweb.link")]),a("br"),e._v(" "),a("code",[e._v("http://dweb.link/ipns/your-dnslink.site.example.com")]),e._v(" â "),a("code",[e._v("https://your--dnslink-site-example-com.ipfs.dweb.link")]),a("br"),e._v(" "),a("strong",[e._v("X-Forwarded-Host:")]),e._v(" we also support "),a("code",[e._v("X-Forwarded-Host: example.com")]),e._v(" if you want to override subdomain gateway host from the original request:"),a("br"),e._v(" "),a("code",[e._v("http://dweb.link/ipfs/{cid}")]),e._v(" â "),a("code",[e._v("http://{cid}.ipfs.example.com")])])]),e._v(" "),a("li",[a("p",[e._v("Public "),a("RouterLink",{attrs:{to:"/how-to/address-ipfs-on-web/#path-gateway"}},[e._v("path gateway")]),e._v(" at "),a("code",[e._v("http://ipfs.io/ipfs/{cid}")]),e._v(" (no Origin separation)")],1),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ ipfs config --json Gateway.PublicGateways "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{\n    "ipfs.io": {\n      "UseSubdomains": false,\n      "Paths": ["/ipfs", "/ipns", "/api"]\n    }\n  }\'')]),e._v("\n")])])])]),e._v(" "),a("li",[a("p",[e._v("Public "),a("a",{attrs:{href:"https://dnslink.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("DNSLink"),a("OutboundLink")],1),e._v(" gateway resolving every hostname passed in "),a("code",[e._v("Host")]),e._v(" header.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ ipfs config --json Gateway.NoDNSLink "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),a("ul",[a("li",[e._v("Note that "),a("code",[e._v("NoDNSLink: false")]),e._v(" is the default (it works out of the box unless set to "),a("code",[e._v("true")]),e._v(" manually)")])])]),e._v(" "),a("li",[a("p",[e._v("Hardened, site-specific "),a("RouterLink",{attrs:{to:"/how-to/address-ipfs-on-web/#dnslink-gateway"}},[e._v("DNSLink gateway")]),e._v("."),a("br"),e._v("\nDisable fetching of remote data ("),a("code",[e._v("NoFetch: true")]),e._v(")"),a("br"),e._v("\nand resolving DNSLink at unknown hostnames ("),a("code",[e._v("NoDNSLink: true")]),e._v(")."),a("br"),e._v("\nThen, enable DNSLink gateway only for the specific hostname (for which data"),a("br"),e._v("\nis already present on the node), without exposing any content-addressing "),a("code",[e._v("Paths")]),e._v(":"),a("br"),e._v('\n"NoFetch": true,'),a("br"),e._v('\n"NoDNSLink": true,')],1),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ ipfs config --json Gateway.NoFetch "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n$ ipfs config --json Gateway.NoDNSLink "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n$ ipfs config --json Gateway.PublicGateways "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{\n    "en.wikipedia-on-ipfs.org": {\n      "NoDNSLink": false,\n      "Paths": []\n    }\n  }\'')]),e._v("\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"identity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identity"}},[e._v("#")]),e._v(" "),a("code",[e._v("Identity")])]),e._v(" "),a("h3",{attrs:{id:"identity-peerid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identity-peerid"}},[e._v("#")]),e._v(" "),a("code",[e._v("Identity.PeerID")])]),e._v(" "),a("p",[e._v("The unique PKI identity label for this configs peer. Set on init and never read,"),a("br"),e._v("\nit's merely here for convenience. Ipfs will always generate the peerID from its"),a("br"),e._v("\nkeypair at runtime.")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (peer ID)")]),e._v(" "),a("h3",{attrs:{id:"identity-privkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identity-privkey"}},[e._v("#")]),e._v(" "),a("code",[e._v("Identity.PrivKey")])]),e._v(" "),a("p",[e._v("The base64 encoded protobuf describing (and containing) the nodes private key.")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (base64 encoded)")]),e._v(" "),a("h2",{attrs:{id:"ipns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipns"}},[e._v("#")]),e._v(" "),a("code",[e._v("Ipns")])]),e._v(" "),a("h3",{attrs:{id:"ipns-republishperiod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipns-republishperiod"}},[e._v("#")]),e._v(" "),a("code",[e._v("Ipns.RepublishPeriod")])]),e._v(" "),a("p",[e._v("A time duration specifying how frequently to republish ipns records to ensure"),a("br"),e._v("\nthey stay fresh on the network.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("4h0m0s")]),e._v(" (4 hours).")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("duration")]),e._v(" or an empty string for the default.")]),e._v(" "),a("h3",{attrs:{id:"ipns-recordlifetime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipns-recordlifetime"}},[e._v("#")]),e._v(" "),a("code",[e._v("Ipns.RecordLifetime")])]),e._v(" "),a("p",[e._v("A time duration specifying the value to set on ipns records for their validity"),a("br"),e._v("\nlifetime.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("24h0m0s")]),e._v(" (24 hours).")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("duration")]),e._v(" or an empty string for the default.")]),e._v(" "),a("h3",{attrs:{id:"ipns-resolvecachesize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipns-resolvecachesize"}},[e._v("#")]),e._v(" "),a("code",[e._v("Ipns.ResolveCacheSize")])]),e._v(" "),a("p",[e._v("The number of entries to store in an LRU cache of resolved ipns entries. Entries"),a("br"),e._v("\nwill be kept cached until their lifetime is expired.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("128")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")]),e._v(" (non-negative, 0 means the default)")]),e._v(" "),a("h2",{attrs:{id:"mounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounts"}},[e._v("#")]),e._v(" "),a("code",[e._v("Mounts")])]),e._v(" "),a("p",[e._v("FUSE mount point configuration options.")]),e._v(" "),a("h3",{attrs:{id:"mounts-ipfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounts-ipfs"}},[e._v("#")]),e._v(" "),a("code",[e._v("Mounts.IPFS")])]),e._v(" "),a("p",[e._v("Mountpoint for "),a("code",[e._v("/ipfs/")]),e._v(".")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("/ipfs")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (filesystem path)")]),e._v(" "),a("h3",{attrs:{id:"mounts-ipns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounts-ipns"}},[e._v("#")]),e._v(" "),a("code",[e._v("Mounts.IPNS")])]),e._v(" "),a("p",[e._v("Mountpoint for "),a("code",[e._v("/ipns/")]),e._v(".")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("/ipns")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (filesystem path)")]),e._v(" "),a("h3",{attrs:{id:"mounts-fuseallowother"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounts-fuseallowother"}},[e._v("#")]),e._v(" "),a("code",[e._v("Mounts.FuseAllowOther")])]),e._v(" "),a("p",[e._v("Sets the FUSE allow other option on the mountpoint.")]),e._v(" "),a("h2",{attrs:{id:"pinning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pinning"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pinning")])]),e._v(" "),a("p",[e._v("Pinning configures the options available for pinning content"),a("br"),e._v("\n(i.e. keeping content longer term instead of as temporarily cached storage).")]),e._v(" "),a("h3",{attrs:{id:"pinning-remoteservices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pinning-remoteservices"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pinning.RemoteServices")])]),e._v(" "),a("p",[a("code",[e._v("RemoteServices")]),e._v(" maps a name for a remote pinning service to its configuration.")]),e._v(" "),a("p",[e._v("A remote pinning service is a remote service that exposes an API for managing"),a("br"),e._v("\nthat service's interest in longer term data storage.")]),e._v(" "),a("p",[e._v("The exposed API conforms to the specification defined at"),a("br"),e._v("\nhttps://ipfs.github.io/pinning-services-api-spec/")]),e._v(" "),a("h4",{attrs:{id:"pinning-remoteservices-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pinning-remoteservices-api"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pinning.RemoteServices: API")])]),e._v(" "),a("p",[e._v("Contains information relevant to utilizing the remote pinning service")]),e._v(" "),a("p",[e._v("Example:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Pinning"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"RemoteServices"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"myPinningService"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"API"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Endpoint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://pinningservice.tld:1234/my/api/path"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"someOpaqueKey"')]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h5",{attrs:{id:"pinning-remoteservices-api-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pinning-remoteservices-api-endpoint"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pinning.RemoteServices: API.Endpoint")])]),e._v(" "),a("p",[e._v("The HTTP(S) endpoint through which to access the pinning service")]),e._v(" "),a("p",[e._v('Example: "https://pinningservice.tld:1234/my/api/path"')]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")])]),e._v(" "),a("h5",{attrs:{id:"pinning-remoteservices-api-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pinning-remoteservices-api-key"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pinning.RemoteServices: API.Key")])]),e._v(" "),a("p",[e._v("The key through which access to the pinning service is granted")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")])]),e._v(" "),a("h2",{attrs:{id:"pubsub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pubsub"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pubsub")])]),e._v(" "),a("p",[e._v("Pubsub configures the "),a("code",[e._v("ipfs pubsub")]),e._v(" subsystem. To use, it must be enabled by"),a("br"),e._v("\npassing the "),a("code",[e._v("--enable-pubsub-experiment")]),e._v(" flag to the daemon.")]),e._v(" "),a("h3",{attrs:{id:"pubsub-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pubsub-router"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pubsub.Router")])]),e._v(" "),a("p",[e._v("Sets the default router used by pubsub to route messages to peers. This can be one of:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('"floodsub"')]),e._v(" - floodsub is a basic router that simply "),a("em",[e._v("floods")]),e._v(" messages to all"),a("br"),e._v("\nconnected peers. This router is extremely inefficient but "),a("em",[e._v("very")]),e._v(" reliable.")]),e._v(" "),a("li",[a("code",[e._v('"gossipsub"')]),e._v(" - "),a("a",{attrs:{href:"https://github.com/libp2p/specs/tree/master/pubsub/gossipsub",target:"_blank",rel:"noopener noreferrer"}},[e._v("gossipsub"),a("OutboundLink")],1),e._v(" is a more advanced routing algorithm that will"),a("br"),e._v("\nbuild an overlay mesh from a subset of the links in the network.")])]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v('"gossipsub"')])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (one of "),a("code",[e._v('"floodsub"')]),e._v(", "),a("code",[e._v('"gossipsub"')]),e._v(", or "),a("code",[e._v('""')]),e._v(" (apply default))")]),e._v(" "),a("h3",{attrs:{id:"pubsub-disablesigning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pubsub-disablesigning"}},[e._v("#")]),e._v(" "),a("code",[e._v("Pubsub.DisableSigning")])]),e._v(" "),a("p",[e._v("Disables message signing and signature verification. Enable this option if"),a("br"),e._v("\nyou're operating in a completely trusted network.")]),e._v(" "),a("p",[e._v("It is "),a("em",[e._v("not")]),e._v(" safe to disable signing even if you don't care "),a("em",[e._v("who")]),e._v(" sent the"),a("br"),e._v("\nmessage because spoofed messages can be used to silence real messages by"),a("br"),e._v("\nintentionally re-using the real message's message ID.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h2",{attrs:{id:"peering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#peering"}},[e._v("#")]),e._v(" "),a("code",[e._v("Peering")])]),e._v(" "),a("p",[e._v("Configures the peering subsystem. The peering subsystem configures go-ipfs to"),a("br"),e._v("\nconnect to, remain connected to, and reconnect to a set of nodes. Nodes should"),a("br"),e._v('\nuse this subsystem to create "sticky" links between frequently useful peers to'),a("br"),e._v("\nimprove reliability.")]),e._v(" "),a("p",[e._v("Use-cases:")]),e._v(" "),a("ul",[a("li",[e._v("An IPFS gateway connected to an IPFS cluster should peer to ensure that the"),a("br"),e._v("\ngateway can always fetch content from the cluster.")]),e._v(" "),a("li",[e._v("A dapp may peer embedded go-ipfs nodes with a set of pinning services or"),a("br"),e._v("\ntextile cafes/hubs.")]),e._v(" "),a("li",[e._v("A set of friends may peer to ensure that they can always fetch each other's"),a("br"),e._v("\ncontent.")])]),e._v(" "),a("p",[e._v("When a node is added to the set of peered nodes, go-ipfs will:")]),e._v(" "),a("ol",[a("li",[e._v("Protect connections to this node from the connection manager. That is,"),a("br"),e._v("\ngo-ipfs will never automatically close the connection to this node and"),a("br"),e._v("\nconnections to this node will not count towards the connection limit.")]),e._v(" "),a("li",[e._v("Connect to this node on startup.")]),e._v(" "),a("li",[e._v("Repeatedly try to reconnect to this node if the last connection dies or the"),a("br"),e._v("\nnode goes offline. This repeated re-connect logic is governed by a randomized"),a("br"),e._v("\nexponential backoff delay ranging from ~5 seconds to ~10 minutes to avoid"),a("br"),e._v("\nrepeatedly reconnect to a node that's offline.")])]),e._v(" "),a("p",[e._v("Peering can be asymmetric or symmetric:")]),e._v(" "),a("ul",[a("li",[e._v("When symmetric, the connection will be protected by both nodes and will likely"),a("br"),e._v("\nbe vary stable.")]),e._v(" "),a("li",[e._v("When asymmetric, only one node (the node that configured peering) will protect"),a("br"),e._v("\nthe connection and attempt to re-connect to the peered node on disconnect. If"),a("br"),e._v("\nthe peered node is under heavy load and/or has a low connection limit, the"),a("br"),e._v("\nconnection may flap repeatedly. Be careful when asymmetrically peering to not"),a("br"),e._v("\noverload peers.")])]),e._v(" "),a("h3",{attrs:{id:"peering-peers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#peering-peers"}},[e._v("#")]),e._v(" "),a("code",[e._v("Peering.Peers")])]),e._v(" "),a("p",[e._v("The set of peers with which to peer.")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Peering"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Peers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"QmPeerID1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip4/18.1.1.1/tcp/4001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"QmPeerID2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Addrs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip4/18.1.1.2/tcp/4001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/ip4/18.1.1.2/udp/4001/quic"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Where "),a("code",[e._v("ID")]),e._v(" is the peer ID and "),a("code",[e._v("Addrs")]),e._v(" is a set of known addresses for the peer. If no addresses are specified, the DHT will be queried.")]),e._v(" "),a("p",[e._v("Additional fields may be added in the future.")]),e._v(" "),a("p",[e._v("Default: empty.")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[peering]")])]),e._v(" "),a("h2",{attrs:{id:"reprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reprovider"}},[e._v("#")]),e._v(" "),a("code",[e._v("Reprovider")])]),e._v(" "),a("h3",{attrs:{id:"reprovider-interval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reprovider-interval"}},[e._v("#")]),e._v(" "),a("code",[e._v("Reprovider.Interval")])]),e._v(" "),a("p",[e._v("Sets the time between rounds of reproviding local content to the routing"),a("br"),e._v("\nsystem. If unset, it defaults to 12 hours. If set to the value "),a("code",[e._v('"0"')]),e._v(" it will"),a("br"),e._v("\ndisable content reproviding.")]),e._v(" "),a("p",[e._v("Note: disabling content reproviding will result in other nodes on the network"),a("br"),e._v("\nnot being able to discover that you have the objects that you have. If you want"),a("br"),e._v("\nto have this disabled and keep the network aware of what you have, you must"),a("br"),e._v("\nmanually announce your content periodically.")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[peering]")])]),e._v(" "),a("h3",{attrs:{id:"reprovider-strategy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reprovider-strategy"}},[e._v("#")]),e._v(" "),a("code",[e._v("Reprovider.Strategy")])]),e._v(" "),a("p",[e._v("Tells reprovider what should be announced. Valid strategies are:")]),e._v(" "),a("ul",[a("li",[e._v('"all" - announce all stored data')]),e._v(" "),a("li",[e._v('"pinned" - only announce pinned data')]),e._v(" "),a("li",[e._v('"roots" - only announce directly pinned keys and root keys of recursive pins')])]),e._v(" "),a("p",[e._v("Default: all")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (or unset for the default)")]),e._v(" "),a("h2",{attrs:{id:"routing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routing"}},[e._v("#")]),e._v(" "),a("code",[e._v("Routing")])]),e._v(" "),a("p",[e._v("Contains options for content, peer, and IPNS routing mechanisms.")]),e._v(" "),a("h3",{attrs:{id:"routing-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routing-type"}},[e._v("#")]),e._v(" "),a("code",[e._v("Routing.Type")])]),e._v(" "),a("p",[e._v("Content routing mode. Can be overridden with daemon "),a("code",[e._v("--routing")]),e._v(" flag.")]),e._v(" "),a("p",[e._v('There are two core routing options: "none" and "dht" (default).')]),e._v(" "),a("ul",[a("li",[e._v('If set to "none", your node will use '),a("em",[e._v("no")]),e._v(" routing system. You'll have to"),a("br"),e._v("\nexplicitly connect to peers that have the content you're looking for.")]),e._v(" "),a("li",[e._v('If set to "dht" (or "dhtclient"/"dhtserver"), your node will use the IPFS DHT.')])]),e._v(" "),a("p",[e._v("When the DHT is enabled, it can operate in two modes: client and server.")]),e._v(" "),a("ul",[a("li",[e._v("In server mode, your node will query other peers for DHT records, and will"),a("br"),e._v("\nrespond to requests from other peers (both requests to store records and"),a("br"),e._v("\nrequests to retrieve records).")]),e._v(" "),a("li",[e._v("In client mode, your node will query the DHT as a client but will not respond"),a("br"),e._v("\nto requests from other peers. This mode is less resource intensive than server"),a("br"),e._v("\nmode.")])]),e._v(" "),a("p",[e._v("When "),a("code",[e._v("Routing.Type")]),e._v(" is set to "),a("code",[e._v("dht")]),e._v(", your node will start as a DHT client, and"),a("br"),e._v("\nswitch to a DHT server when and if it determines that it's reachable from the"),a("br"),e._v("\npublic internet (e.g., it's not behind a firewall).")]),e._v(" "),a("p",[e._v("To force a specific DHT mode, client or server, set "),a("code",[e._v("Routing.Type")]),e._v(" to"),a("br"),e._v(" "),a("code",[e._v("dhtclient")]),e._v(" or "),a("code",[e._v("dhtserver")]),e._v(" respectively. Please do not set this to "),a("code",[e._v("dhtserver")]),a("br"),e._v("\nunless you're sure your node is reachable from the public network.")]),e._v(" "),a("p",[a("strong",[e._v("Example:")])]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Routing"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dhtclient"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Default: dht")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (or unset for the default)")]),e._v(" "),a("h2",{attrs:{id:"swarm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm")])]),e._v(" "),a("p",[e._v("Options for configuring the swarm.")]),e._v(" "),a("h3",{attrs:{id:"swarm-addrfilters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-addrfilters"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.AddrFilters")])]),e._v(" "),a("p",[e._v("An array of addresses (multiaddr netmasks) to not dial. By default, IPFS nodes"),a("br"),e._v("\nadvertise "),a("em",[e._v("all")]),e._v(" addresses, even internal ones. This makes it easier for nodes on"),a("br"),e._v("\nthe same network to reach each other. Unfortunately, this means that an IPFS"),a("br"),e._v("\nnode will try to connect to one or more private IP addresses whenever dialing"),a("br"),e._v("\nanother node, even if this other node is on a different network. This may"),a("br"),e._v("\ntrigger netscan alerts on some hosting providers or cause strain in some setups.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("server")]),e._v(" configuration profile fills up this list with sensible defaults,"),a("br"),e._v("\npreventing dials to all non-routable IP addresses (e.g., "),a("code",[e._v("192.168.0.0/16")]),e._v(") but"),a("br"),e._v("\nyou should always check settings against your own network and/or hosting"),a("br"),e._v("\nprovider.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("[]")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("array[string]")])]),e._v(" "),a("h3",{attrs:{id:"swarm-disablebandwidthmetrics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-disablebandwidthmetrics"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.DisableBandwidthMetrics")])]),e._v(" "),a("p",[e._v("A boolean value that when set to true, will cause ipfs to not keep track of"),a("br"),e._v("\nbandwidth metrics. Disabling bandwidth metrics can lead to a slight performance"),a("br"),e._v("\nimprovement, as well as a reduction in memory usage.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"swarm-disablenatportmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-disablenatportmap"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.DisableNatPortMap")])]),e._v(" "),a("p",[e._v("Disable automatic NAT port forwarding.")]),e._v(" "),a("p",[e._v("When not disabled (default), go-ipfs asks NAT devices (e.g., routers), to open"),a("br"),e._v("\nup an external port and forward it to the port go-ipfs is running on. When this"),a("br"),e._v("\nworks (i.e., when your router supports NAT port forwarding), it makes the local"),a("br"),e._v("\ngo-ipfs node accessible from the public internet.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"swarm-disablerelay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-disablerelay"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.DisableRelay")])]),e._v(" "),a("p",[e._v("Deprecated: Set "),a("code",[e._v("Swarm.Transports.Network.Relay")]),e._v(" to "),a("code",[e._v("false")]),e._v(".")]),e._v(" "),a("p",[e._v("Disables the p2p-circuit relay transport. This will prevent this node from"),a("br"),e._v("\nconnecting to nodes behind relays, or accepting connections from nodes behind"),a("br"),e._v("\nrelays.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"swarm-enablerelayhop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-enablerelayhop"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.EnableRelayHop")])]),e._v(" "),a("p",[e._v('Configures this node to act as a relay "hop". A relay "hop" relays traffic for other peers.')]),e._v(" "),a("p",[e._v("WARNING: Do not enable this option unless you know what you're doing. Other"),a("br"),e._v("\npeers will randomly decide to use your node as a relay and consume "),a("em",[e._v("all")]),a("br"),e._v("\navailable bandwidth. There is "),a("em",[e._v("no")]),e._v(" rate-limiting.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h3",{attrs:{id:"swarm-enableautorelay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-enableautorelay"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.EnableAutoRelay")])]),e._v(" "),a("p",[e._v('Enables "automatic relay" mode for this node. This option does two '),a("em",[e._v("very")]),a("br"),e._v("\ndifferent things based on the "),a("code",[e._v("Swarm.EnableRelayHop")]),e._v(". See"),a("br"),e._v(" "),a("a",{attrs:{href:"https://github.com/ipfs/go-ipfs/issues/7228",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7228"),a("OutboundLink")],1),e._v(" for context.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("bool")])]),e._v(" "),a("h4",{attrs:{id:"mode-1-enablerelayhop-is-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode-1-enablerelayhop-is-false"}},[e._v("#")]),e._v(" Mode 1: "),a("code",[e._v("EnableRelayHop")]),e._v(" is "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("Swarm.EnableAutoRelay")]),e._v(" is enabled and "),a("code",[e._v("Swarm.EnableRelayHop")]),e._v(" is disabled,"),a("br"),e._v("\nyour node will automatically "),a("em",[e._v("use")]),e._v(" public relays from the network if it detects"),a("br"),e._v("\nthat it cannot be reached from the public internet (e.g., it's behind a"),a("br"),e._v("\nfirewall). This is likely the feature you're looking for.")]),e._v(" "),a("p",[e._v("If you enable "),a("code",[e._v("EnableAutoRelay")]),e._v(", you should almost certainly disable"),a("br"),e._v(" "),a("code",[e._v("EnableRelayHop")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"mode-2-enablerelayhop-is-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode-2-enablerelayhop-is-true"}},[e._v("#")]),e._v(" Mode 2: "),a("code",[e._v("EnableRelayHop")]),e._v(" is "),a("code",[e._v("true")])]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("EnableAutoRelay")]),e._v(" is enabled and "),a("code",[e._v("EnableRelayHop")]),e._v(" is enabled, your node will"),a("br"),e._v(" "),a("em",[e._v("act")]),e._v(" as a public relay for the network. Furthermore, in addition to simply"),a("br"),e._v("\nrelaying traffic, your node will advertise itself as a public relay. Unless you"),a("br"),e._v("\nhave the bandwidth of a small ISP, do not enable both of these options at the"),a("br"),e._v("\nsame time.")]),e._v(" "),a("h3",{attrs:{id:"swarm-enableautonatservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-enableautonatservice"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.EnableAutoNATService")])]),e._v(" "),a("p",[a("strong",[e._v("REMOVED")])]),e._v(" "),a("p",[e._v("Please use ["),a("code",[e._v("AutoNAT.ServiceMode")]),e._v("][].")]),e._v(" "),a("h3",{attrs:{id:"swarm-connmgr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-connmgr"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.ConnMgr")])]),e._v(" "),a("p",[e._v("The connection manager determines which and how many connections to keep and can"),a("br"),e._v("\nbe configured to keep. Go-ipfs currently supports two connection managers:")]),e._v(" "),a("ul",[a("li",[e._v("none: never close idle connections.")]),e._v(" "),a("li",[e._v("basic: the default connection manager.")])]),e._v(" "),a("p",[e._v("Default: basic")]),e._v(" "),a("h4",{attrs:{id:"swarm-connmgr-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-connmgr-type"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.ConnMgr.Type")])]),e._v(" "),a("p",[e._v("Sets the type of connection manager to use, options are: "),a("code",[e._v('"none"')]),e._v(" (no connection"),a("br"),e._v("\nmanagement) and "),a("code",[e._v('"basic"')]),e._v(".")]),e._v(" "),a("p",[e._v('Default: "basic".')]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("string")]),e._v(" (when unset or "),a("code",[e._v('""')]),e._v(", the default connection manager is applied"),a("br"),e._v("\nand all "),a("code",[e._v("ConnMgr")]),e._v(" fields are ignored).")]),e._v(" "),a("h4",{attrs:{id:"basic-connection-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-connection-manager"}},[e._v("#")]),e._v(" Basic Connection Manager")]),e._v(" "),a("p",[e._v('The basic connection manager uses a "high water", a "low water", and internal'),a("br"),e._v("\nscoring to periodically close connections to free up resources. When a node"),a("br"),e._v("\nusing the basic connection manager reaches "),a("code",[e._v("HighWater")]),e._v(" idle connections, it will"),a("br"),e._v("\nclose the least useful ones until it reaches "),a("code",[e._v("LowWater")]),e._v(" idle connections.")]),e._v(" "),a("p",[e._v("The connection manager considers a connection idle if:")]),e._v(" "),a("ul",[a("li",[e._v("It has not been explicitly "),a("em",[e._v("protected")]),e._v(" by some subsystem. For example, Bitswap"),a("br"),e._v("\nwill protect connections to peers from which it is actively downloading data,"),a("br"),e._v("\nthe DHT will protect some peers for routing, and the peering subsystem will"),a("br"),e._v('\nprotect all "peered" nodes.')]),e._v(" "),a("li",[e._v("It has existed for longer than the "),a("code",[e._v("GracePeriod")]),e._v(".")])]),e._v(" "),a("p",[a("strong",[e._v("Example:")])]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Swarm"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ConnMgr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"basic"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"LowWater"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"HighWater"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"GracePeriod"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"30s"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h5",{attrs:{id:"swarm-connmgr-lowwater"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-connmgr-lowwater"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.ConnMgr.LowWater")])]),e._v(" "),a("p",[e._v("LowWater is the number of connections that the basic connection manager will"),a("br"),e._v("\ntrim down to.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("600")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")])]),e._v(" "),a("h5",{attrs:{id:"swarm-connmgr-highwater"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-connmgr-highwater"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.ConnMgr.HighWater")])]),e._v(" "),a("p",[e._v("HighWater is the number of connections that, when exceeded, will trigger a"),a("br"),e._v("\nconnection GC operation. Note: protected/recently formed connections don't count"),a("br"),e._v("\ntowards this limit.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("900")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("integer")])]),e._v(" "),a("h5",{attrs:{id:"swarm-connmgr-graceperiod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-connmgr-graceperiod"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.ConnMgr.GracePeriod")])]),e._v(" "),a("p",[e._v("GracePeriod is a time duration that new connections are immune from being closed"),a("br"),e._v("\nby the connection manager.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v('"20s"')])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("duration")])]),e._v(" "),a("h3",{attrs:{id:"swarm-transports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports")])]),e._v(" "),a("p",[e._v("Configuration section for libp2p transports. An empty configuration will apply"),a("br"),e._v("\nthe defaults.")]),e._v(" "),a("h3",{attrs:{id:"swarm-transports-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-network"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Network")])]),e._v(" "),a("p",[e._v("Configuration section for libp2p "),a("em",[e._v("network")]),e._v(" transports. Transports enabled in"),a("br"),e._v("\nthis section will be used for dialing. However, to receive connections on these"),a("br"),e._v("\ntransports, multiaddrs for these transports must be added to "),a("code",[e._v("Addresses.Swarm")]),e._v(".")]),e._v(" "),a("p",[e._v("Supported transports are: QUIC, TCP, WS, and Relay.")]),e._v(" "),a("p",[e._v("Each field in this section is a "),a("code",[e._v("flag")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-network-tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-network-tcp"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Network.TCP")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Transmission_Control_Protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP"),a("OutboundLink")],1),e._v(" is the most"),a("br"),e._v("\nwidely used transport by go-ipfs nodes. It doesn't directly support encryption"),a("br"),e._v("\nand/or multiplexing, so libp2p will layer a security & multiplexing transport"),a("br"),e._v("\nover it.")]),e._v(" "),a("p",[e._v("Default: Enabled")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("flag")])]),e._v(" "),a("p",[e._v("Listen Addresses:")]),e._v(" "),a("ul",[a("li",[e._v("/ip4/0.0.0.0/tcp/4001 (default)")]),e._v(" "),a("li",[e._v("/ip6/::/tcp/4001 (default)")])]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-network-websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-network-websocket"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Network.Websocket")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/WebSocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("Websocket"),a("OutboundLink")],1),e._v(" is a transport usually used"),a("br"),e._v("\nto connect to non-browser-based IPFS nodes from browser-based js-ipfs nodes.")]),e._v(" "),a("p",[e._v("While it's enabled by default for dialing, go-ipfs doesn't listen on this"),a("br"),e._v("\ntransport by default.")]),e._v(" "),a("p",[e._v("Default: Enabled")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("flag")])]),e._v(" "),a("p",[e._v("Listen Addresses:")]),e._v(" "),a("ul",[a("li",[e._v("/ip4/0.0.0.0/tcp/4002/ws")]),e._v(" "),a("li",[e._v("/ip6/::/tcp/4002/ws")])]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-network-quic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-network-quic"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Network.QUIC")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/QUIC",target:"_blank",rel:"noopener noreferrer"}},[e._v("QUIC"),a("OutboundLink")],1),e._v(" is a UDP-based transport with"),a("br"),e._v("\nbuilt-in encryption and multiplexing. The primary benefits over TCP are:")]),e._v(" "),a("ol",[a("li",[e._v("It doesn't require a file descriptor per connection, easing the load on the OS.")]),e._v(" "),a("li",[e._v("It currently takes 2 round trips to establish a connection (our TCP transport"),a("br"),e._v("\ncurrently takes 6).")])]),e._v(" "),a("p",[e._v("Default: Enabled")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("flag")])]),e._v(" "),a("p",[e._v("Listen Addresses:")]),e._v(" "),a("ul",[a("li",[e._v("/ip4/0.0.0.0/udp/4001/quic (default)")]),e._v(" "),a("li",[e._v("/ip6/::/udp/4001/quic (default)")])]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-network-relay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-network-relay"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Network.Relay")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/libp2p/specs/tree/master/relay",target:"_blank",rel:"noopener noreferrer"}},[e._v("Libp2p Relay"),a("OutboundLink")],1),e._v(" proxy"),a("br"),e._v("\ntransport that forms connections by hopping between multiple libp2p nodes. This"),a("br"),e._v("\ntransport is primarily useful for bypassing firewalls and NATs.")]),e._v(" "),a("p",[e._v("Default: Enabled")]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("flag")])]),e._v(" "),a("p",[e._v("Listen Addresses: This transport is special. Any node that enables this"),a("br"),e._v("\ntransport can receive inbound connections on this transport, without specifying"),a("br"),e._v("\na listen address.")]),e._v(" "),a("h3",{attrs:{id:"swarm-transports-security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-security"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Security")])]),e._v(" "),a("p",[e._v("Configuration section for libp2p "),a("em",[e._v("security")]),e._v(" transports. Transports enabled in"),a("br"),e._v("\nthis section will be used to secure unencrypted connections.")]),e._v(" "),a("p",[e._v("Security transports are configured with the "),a("code",[e._v("priority")]),e._v(" type.")]),e._v(" "),a("p",[e._v("When establishing an "),a("em",[e._v("outbound")]),e._v(" connection, go-ipfs will try each security"),a("br"),e._v("\ntransport in priority order (lower first), until it finds a protocol that the"),a("br"),e._v("\nreceiver supports. When establishing an "),a("em",[e._v("inbound")]),e._v(" connection, go-ipfs will let"),a("br"),e._v("\nthe initiator choose the protocol, but will refuse to use any of the disabled"),a("br"),e._v("\ntransports.")]),e._v(" "),a("p",[e._v("Supported transports are: TLS (priority 100), SECIO (Disabled: i.e. priority false), Noise"),a("br"),e._v("\n(priority 300).")]),e._v(" "),a("p",[e._v("No default priority will ever be less than 100.")]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-security-tls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-security-tls"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Security.TLS")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/libp2p/specs/tree/master/tls",target:"_blank",rel:"noopener noreferrer"}},[e._v("TLS"),a("OutboundLink")],1),e._v(" (1.3) is the default"),a("br"),e._v("\nsecurity transport as of go-ipfs 0.5.0. It's also the most scrutinized and"),a("br"),e._v("\ntrusted security transport.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("100")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("priority")])]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-security-secio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-security-secio"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Security.SECIO")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/libp2p/specs/tree/master/secio",target:"_blank",rel:"noopener noreferrer"}},[e._v("SECIO"),a("OutboundLink")],1),e._v(" was the most widely"),a("br"),e._v("\nsupported IPFS & libp2p security transport. However, it is currently being"),a("br"),e._v("\nphased out in favor of more popular and better vetted protocols like TLS and"),a("br"),e._v("\nNoise.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("false")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("priority")])]),e._v(" "),a("h4",{attrs:{id:"swarm-transports-security-noise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-security-noise"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Security.Noise")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/libp2p/specs/tree/master/noise",target:"_blank",rel:"noopener noreferrer"}},[e._v("Noise"),a("OutboundLink")],1),e._v(" is slated to replace"),a("br"),e._v("\nTLS as the cross-platform, default libp2p protocol due to ease of"),a("br"),e._v("\nimplementation. It is currently enabled by default but with low priority as it's"),a("br"),e._v("\nnot yet widely supported.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("300")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("priority")])]),e._v(" "),a("h3",{attrs:{id:"swarm-transports-multiplexers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-multiplexers"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Multiplexers")])]),e._v(" "),a("p",[e._v("Configuration section for libp2p "),a("em",[e._v("multiplexer")]),e._v(" transports. Transports enabled in"),a("br"),e._v("\nthis section will be used to multiplex duplex connections.")]),e._v(" "),a("p",[e._v("Multiplexer transports are secured the same way security transports are, with"),a("br"),e._v("\nthe "),a("code",[e._v("priority")]),e._v(" type. Like with security transports, the initiator gets their"),a("br"),e._v("\nfirst choice.")]),e._v(" "),a("p",[e._v("Supported transports are: Yamux (priority 100) and Mplex (priority 200)")]),e._v(" "),a("p",[e._v("No default priority will ever be less than 100.")]),e._v(" "),a("h3",{attrs:{id:"swarm-transports-multiplexers-yamux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-multiplexers-yamux"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Multiplexers.Yamux")])]),e._v(" "),a("p",[e._v("Yamux is the default multiplexer used when communicating between go-ipfs nodes.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("100")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("priority")])]),e._v(" "),a("h3",{attrs:{id:"swarm-transports-multiplexers-mplex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-transports-multiplexers-mplex"}},[e._v("#")]),e._v(" "),a("code",[e._v("Swarm.Transports.Multiplexers.Mplex")])]),e._v(" "),a("p",[e._v("Mplex is the default multiplexer used when communicating between go-ipfs and all"),a("br"),e._v("\nother IPFS and libp2p implementations. Unlike Yamux:")]),e._v(" "),a("p",[e._v("The mounts config values specifies the default mount points for the IPFS and IPNS virtual file systems, if no other directories are specified by the "),a("code",[e._v("ipfs mount")]),e._v(" command. These folders should exist, and have permissions for your user to be able to mount to them via fuse.")]),e._v(" "),a("p",[e._v("Default: "),a("code",[e._v("200")])]),e._v(" "),a("p",[e._v("Type: "),a("code",[e._v("priority")])])])}),[],!1,null,null,null);t.default=r.exports}}]);Û³