
ö4î4(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{638:function(e,t,r){"use strict";r.r(t);var a=r(24),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"js-ipfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js-ipfs"}},[e._v("#")]),e._v(" JS-IPFS")]),e._v(" "),r("div",{staticClass:"custom-block callout"},[r("p",[r("a",{attrs:{href:"https://proto.school/course/ipfs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Explore js-ipfs through interactive coding challenges at ProtoSchool"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"ipfs-and-javascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ipfs-and-javascript"}},[e._v("#")]),e._v(" IPFS and JavaScript")]),e._v(" "),r("p",[e._v("There are two main JavaScript libraries for working with IPFS. Both work in Node.js and in modern web browsers:")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS-IPFS"),r("OutboundLink")],1),e._v(" is a full implementation of IPFS, similar to "),r("a",{attrs:{href:"https://github.com/ipfs/go-ipfs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Go-IPFS"),r("OutboundLink")],1),e._v(". You can use it either as a command-line application or as a library to start an IPFS node directly in your program.")])]),e._v(" "),r("li",[r("p",[e._v("The "),r("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS-IPFS HTTP client"),r("OutboundLink")],1),e._v(" is a smaller library that controls an IPFS node that is already running via its "),r("RouterLink",{attrs:{to:"/reference/http/api/"}},[e._v("HTTP API")]),e._v(". JS-IPFS actually uses this library internally if it detects that another node is already running on your computer. You can also interact with the "),r("RouterLink",{attrs:{to:"/reference/http/api/"}},[e._v("HTTP API")]),e._v(" directly using "),r("code",[e._v("fetch()")]),e._v(" in a browser or a module like "),r("code",[e._v("request")]),e._v(" in Node.js, but using this library can be much more convenient.")],1)])]),e._v(" "),r("p",[e._v("Both libraries have the same "),r("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/tree/master/docs/core-api",target:"_blank",rel:"noopener noreferrer"}},[e._v("interface for using all the major IPFS commands"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("Whenever reasonable, we recommend the second method (interacting with a separate IPFS node via the HTTP API). Keeping the IPFS node in a separate process (even if itâ€™s one your program spawns) isolates you from any stability problems with the node. If a user already has IPFS installed, this also means you can take advantage of a single, common installation on their computer. Itâ€™s also less code to load in a browser. If you need to spawn a separate IPFS process, you might want to take a look at "),r("a",{attrs:{href:"https://github.com/ipfs/js-ipfsd-ctl",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("js-ipfsd-ctl")]),r("OutboundLink")],1),e._v(", which uses the same interface to spawn a Go-IPFS node, a JS-IPFS node, or an in-process JS-IPFS node.")]),e._v(" "),r("h3",{attrs:{id:"browsers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#browsers"}},[e._v("#")]),e._v(" Browsers")]),e._v(" "),r("p",[e._v("Both the "),r("code",[e._v("js-ipfs")]),e._v(" and "),r("code",[e._v("js-ipfs-http-client")]),e._v(" libraries work in browsers, but each has some special considerations noted in their READMEs.")]),e._v(" "),r("p",[e._v("Until late 2019, the IPFS browser extension, "),r("a",{attrs:{href:"https://github.com/ipfs-shipyard/ipfs-companion",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPFS Companion"),r("OutboundLink")],1),e._v(" exposed a global "),r("a",{attrs:{href:"https://github.com/ipfs-shipyard/ipfs-companion/blob/master/docs/window.ipfs.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("window.ipfs")]),r("OutboundLink")],1),e._v(" object to web pages. This object had the same interface as "),r("code",[e._v("js-ipfs-api")]),e._v(", but came with much better security controls and let you use IPFS without loading any special libraries.  However, it was disabled due to reasons explained in "),r("a",{attrs:{href:"https://github.com/ipfs/ipfs-companion/pull/777",target:"_blank",rel:"noopener noreferrer"}},[e._v("ipfs/ipfs-companion#777"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"js-api-reference"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js-api-reference"}},[e._v("#")]),e._v(" JS API reference")]),e._v(" "),r("p",[e._v("See the "),r("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/tree/master/docs/core-api",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS core API reference â†’"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"http-client-library"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-client-library"}},[e._v("#")]),e._v(" HTTP client library")]),e._v(" "),r("p",[e._v("A "),r("a",{attrs:{href:"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client",target:"_blank",rel:"noopener noreferrer"}},[e._v("client library"),r("OutboundLink")],1),e._v(" for the IPFS HTTP API, implemented in JavaScript. This client library implements the interface-ipfs-core enabling applications to change between an embedded js-ipfs node and any remote IPFS node without having to change the code. In addition, this client library implements a set of utility functions.")]),e._v(" "),r("h2",{attrs:{id:"hands-on-examples"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hands-on-examples"}},[e._v("#")]),e._v(" Hands-on examples")]),e._v(" "),r("p",[e._v("There are lots of JS-IPFS use-case examples in the "),r("a",{attrs:{href:"https://github.com/ipfs-examples/js-ipfs-examples",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ipfs/js-ipfs")]),e._v(" GitHub repository"),r("OutboundLink")],1),e._v(". They're all self-contained projects that let your spin up and test environments quickly. "),r("a",{attrs:{href:"https://github.com/ipfs-examples/js-ipfs-examples/tree/master/examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("Check them out â†’"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("A good starting place is the "),r("a",{attrs:{href:"https://github.com/ipfs-examples/js-ipfs-examples/tree/master/examples/ipfs-101",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPFS 101, spawn a node and add a file to the IPFS network"),r("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);î4